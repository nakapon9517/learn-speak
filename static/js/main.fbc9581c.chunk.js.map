{"version":3,"sources":["state/speak/actions.tsx","state/speak/reducers.tsx","state/speak/operations.tsx","views/components/Login.tsx","views/components/SideBar.tsx","views/components/Header.tsx","views/components/voice.js","views/components/Body.tsx","views/pages/Speak.tsx","views/containers/SpeakContainer.ts","views/App.tsx","serviceWorker.ts","state/store.tsx","index.tsx"],"names":["ActionTypes","actions","loginAction","id","pw","type","payload","changeType","changeSearch","text","clickFolder","opened","clickPlay","folderId","fileId","playBefore","clickFile","checked","clickAll","folderAdd","name","category","folderDel","fileAdd","fileDel","musicStart","musicStop","musicEnd","initialState","folders","count","files","listening","indicate","loginAuth","speakReducer","state","action","forEach","file","filter","includes","folder","target","targetFolders","fold","targetFoldId","map","newFolders","length","maxIndex","targetFiles","newFiles","alert","withStyles","theme","root","width","height","paddingTop","alignItems","justifyContent","inputZone","textAlign","margin","border","borderRadius","boxShadow","classes","React","useState","mail","setMail","password","setPassword","alertType","setErrorType","isErrorOpen","setErrorOpen","errorMessage","setErrorMessage","Fragment","Collapse","in","Alert","severity","onClick","Paper","className","play","pause","iterationCount","direction","duration","keyframes","Typography","variant","component","FormControl","TextField","label","style","marginTop","value","autoComplete","onChange","event","Button","color","Link","href","fontSize","getFolderIcon","maxWidth","backgroundColor","palette","background","paper","display","position","formControl","spacing","minWidth","isDialogOpen","setDialogOpen","delFolderId","setDelFolderId","confirmMessage","setConfirmMessage","openBox","setOpenBox","openModal","setOpenModal","folderName","setFolderName","folderCategory","setFolderCategory","useEffect","handleFolderAdd","setError","isError","message","marginLeft","InputLabel","htmlFor","Input","Select","labelId","MenuItem","float","marginRight","marginBottom","Fab","aria-label","size","List","aria-labelledby","ListItem","button","ListItemText","primary","timeout","unmountOnExit","disablePadding","key","overflow","IconButton","edge","Dialog","open","onClose","aria-describedby","DialogTitle","DialogContent","DialogContentText","DialogActions","flexGrow","nested","paddingLeft","title","breakpoints","up","search","shape","fade","common","white","searchIcon","padding","pointerEvents","inputRoot","inputInput","transition","transitions","create","isLinkOpen","setLinkOpen","linkMessage","setLinkMessage","link","setLink","isLoginDialogOpen","setLoginDialogOpen","isDrawerOpen","setDrawerOpen","isType","setType","drawerRef","createRef","handleLink","drawer","role","bottom","right","document","location","AppBar","Toolbar","Drawer","ref","anchor","noWrap","Switch","defaultChecked","inputProps","InputBase","placeholder","input","execute","a","window","options","SpeechSynthesisUtterance","lang","rate","pitch","speechSynthesis","speak","paddingRight","textOverflow","iconButtonGroup","dialogMessage","setDialogMessage","deleteFolderId","setDeleteFolderId","deleteFileId","setDeleteFileId","allCheck","setAllCheck","inputName","setInputName","inputText","setInputText","inputCategory","setInputCategory","targetFoldersId","indexOf","handlerSpeak","Checkbox","tabIndex","check","endIcon","index","String","undefined","dense","divider","disableRipple","fadeIn","flex","login","sidebar","minHeight","body","foot","createMuiTheme","default","typography","textTransform","fontFamily","join","mixins","toolbar","props","MuiList","ThemeProvider","connect","dispatch","operations","Component","SpeakContainer","Boolean","hostname","match","reducer","combineReducers","store","compose","persistState","reduxCreateStore","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console"],"mappings":"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","file":"static/js/main.fbc9581c.chunk.js","sourcesContent":["import { ActionType } from \"redux-actions-type\";\r\n\r\nexport const ActionTypes = {\r\n  LOGIN_ACTION: \"speak/LOGIN_ACTION\",\r\n  CHANGE_TYPE: \"speak/CHANGE_TYPE\",\r\n  CHANGE_SEARCH: \"speak/CHANGE_SEARCH\",\r\n\r\n  CLICK_FOLDER: \"speak/CLICK_FOLDER\",\r\n  CLICK_PLAY: \"speak/CLICK_PLAY\",\r\n  CLICK_FILE: \"speak/CLICK_FILE\",\r\n  CLICK_ALL: \"speak/CLICK_ALL\",\r\n\r\n  FOLDER_ADD: \"speak/FOLDER_ADD\",\r\n  FOLDER_DEL: \"speak/FOLDER_DEL\",\r\n\r\n  FILE_ADD: \"speak/FILE_ADD\",\r\n  FILE_DEL: \"speak/FILE_DEL\",\r\n\r\n  MUSIC_START: \"speak/MUSIC_START\",\r\n  MUSIC_STOP: \"speak/MUSIC_STOP\",\r\n  MUSIC_END: \"speak/MUSIC_END\",\r\n} as const;\r\n\r\nconst actions = {\r\n  loginAction(id: string, pw: string) {\r\n    return {\r\n      type: ActionTypes.LOGIN_ACTION,\r\n      payload: { id, pw },\r\n    };\r\n  },\r\n  changeType(type: string) {\r\n    return {\r\n      type: ActionTypes.CHANGE_TYPE,\r\n      payload: { type },\r\n    };\r\n  },\r\n  changeSearch(text: string) {\r\n    return {\r\n      type: ActionTypes.CHANGE_SEARCH,\r\n      payload: { text },\r\n    };\r\n  },\r\n  clickFolder(id: string, opened: boolean) {\r\n    return {\r\n      type: ActionTypes.CLICK_FOLDER,\r\n      payload: { id, opened },\r\n    };\r\n  },\r\n  clickPlay(folderId: number, fileId: number, playBefore: boolean) {\r\n    return {\r\n      type: ActionTypes.CLICK_PLAY,\r\n      payload: { folderId, fileId, playBefore },\r\n    };\r\n  },\r\n  clickFile(folderId: number, fileId: number, checked: boolean) {\r\n    return {\r\n      type: ActionTypes.CLICK_FILE,\r\n      payload: { folderId, fileId, checked },\r\n    };\r\n  },\r\n  clickAll(checked: boolean) {\r\n    return {\r\n      type: ActionTypes.CLICK_ALL,\r\n      payload: { checked },\r\n    };\r\n  },\r\n  folderAdd(name: string, category: string) {\r\n    return {\r\n      type: ActionTypes.FOLDER_ADD,\r\n      payload: { name, category },\r\n    };\r\n  },\r\n  folderDel(folderId: number) {\r\n    return {\r\n      type: ActionTypes.FOLDER_DEL,\r\n      payload: { folderId },\r\n    };\r\n  },\r\n  fileAdd(folderId: number, name: string, text: string) {\r\n    return {\r\n      type: ActionTypes.FILE_ADD,\r\n      payload: { folderId, name, text },\r\n    };\r\n  },\r\n  fileDel(folderId: number, fileId: number) {\r\n    return {\r\n      type: ActionTypes.FILE_DEL,\r\n      payload: { folderId, fileId },\r\n    };\r\n  },\r\n  musicStart() {\r\n    return {\r\n      type: ActionTypes.MUSIC_START,\r\n    };\r\n  },\r\n  musicStop() {\r\n    return {\r\n      type: ActionTypes.MUSIC_STOP,\r\n    };\r\n  },\r\n  musicEnd() {\r\n    return {\r\n      type: ActionTypes.MUSIC_END,\r\n    };\r\n  },\r\n};\r\n\r\nexport type Actions = ActionType<typeof actions>;\r\nexport default actions;\r\n","import { Reducer } from \"redux\";\r\nimport { Fold, File } from \"speak\";\r\nimport { Actions, ActionTypes } from \"./actions\";\r\n\r\nexport type SpeakState = {\r\n  folders: Fold[];\r\n  files: File[];\r\n  type: string;\r\n  loginAuth: boolean;\r\n};\r\n\r\nexport const initialState: SpeakState = {\r\n  folders: [\r\n    {\r\n      folderId: 1,\r\n      name: \"英単語\",\r\n      opened: false,\r\n      count: 0,\r\n      category: \"secondary\",\r\n    },\r\n    {\r\n      folderId: 2,\r\n      name: \"YOASOBI 歌詞\",\r\n      opened: true,\r\n      count: 0,\r\n      category: \"action\",\r\n    },\r\n  ],\r\n  files: [\r\n    {\r\n      folderId: 1,\r\n      fileId: 1,\r\n      name: \"ソーシャルディスタンス\",\r\n      text: \"social distance\",\r\n      checked: false,\r\n      listening: false,\r\n      indicate: true,\r\n    },\r\n    {\r\n      folderId: 1,\r\n      fileId: 2,\r\n      name: \"シューティングスター\",\r\n      text: \"shooting star\",\r\n      checked: false,\r\n      listening: false,\r\n      indicate: true,\r\n    },\r\n    {\r\n      folderId: 1,\r\n      fileId: 3,\r\n      name: \"アウストラロピテクス\",\r\n      text: \"Australopithecus\",\r\n      checked: false,\r\n      listening: false,\r\n      indicate: true,\r\n    },\r\n    {\r\n      folderId: 2,\r\n      fileId: 1,\r\n      name: \"夜に駆ける\",\r\n      text:\r\n        \"沈むように溶けてゆくように　二人だけの空が広がる夜に　「さよなら」だけだった　その一言で全てが分かった　日が沈みだした空と君の姿　フェンス越しに重なっていた\",\r\n      checked: true,\r\n      listening: false,\r\n      indicate: true,\r\n    },\r\n  ],\r\n  type: \"light\",\r\n  loginAuth: false,\r\n};\r\n\r\nconst speakReducer: Reducer<SpeakState, Actions> = (\r\n  state = initialState,\r\n  action\r\n) => {\r\n  switch (action.type) {\r\n    case ActionTypes.LOGIN_ACTION: {\r\n      if (action.payload.id && action.payload.pw) {\r\n        state.loginAuth = true;\r\n      } else {\r\n        state.loginAuth = false;\r\n      }\r\n      return {\r\n        ...state,\r\n      };\r\n    }\r\n    case ActionTypes.CHANGE_TYPE: {\r\n      state.type = action.payload.type;\r\n      return {\r\n        ...state,\r\n      };\r\n    }\r\n    case ActionTypes.CHANGE_SEARCH: {\r\n      state.files.forEach((file) => {\r\n        file.indicate = true;\r\n      });\r\n      if (action.payload.text) {\r\n        state.files\r\n          .filter((file) => !file.text.includes(action.payload.text))\r\n          .forEach((file) => {\r\n            file.indicate = false;\r\n          });\r\n      }\r\n      return {\r\n        ...state,\r\n      };\r\n    }\r\n    case ActionTypes.CLICK_FOLDER: {\r\n      state.folders.forEach((folder) => {\r\n        if (folder.folderId === action.payload.id) {\r\n          folder.opened = !folder.opened;\r\n        }\r\n      });\r\n      return {\r\n        ...state,\r\n      };\r\n    }\r\n    case ActionTypes.CLICK_PLAY: {\r\n      const folderId = action.payload.folderId;\r\n      const fileId = action.payload.folderId;\r\n      const playBefore = action.payload.playBefore;\r\n      if (folderId && fileId) {\r\n        // 単独\r\n        state.files\r\n          .filter(\r\n            (file) => file.folderId === folderId && file.fileId === fileId\r\n          )\r\n          .forEach((file) => {\r\n            file.listening = playBefore;\r\n          });\r\n      }\r\n      return {\r\n        ...state,\r\n      };\r\n    }\r\n    case ActionTypes.CLICK_FILE: {\r\n      // チェック対象ファイル\r\n      const target = state.files.filter(\r\n        (file) =>\r\n          file.folderId === action.payload.folderId &&\r\n          file.fileId === action.payload.fileId\r\n      );\r\n      target[0].checked = !action.payload.checked;\r\n      return {\r\n        ...state,\r\n      };\r\n    }\r\n    case ActionTypes.CLICK_ALL: {\r\n      // チェック対象フォルダ\r\n      const targetFolders = state.folders.filter(\r\n        (fold) => fold.opened === true\r\n      );\r\n      // チェック対象ファイル\r\n      const targetFoldId = [\r\n        targetFolders.map((fold) => {\r\n          return fold.folderId;\r\n        }),\r\n      ];\r\n      state.files.forEach((file) => {\r\n        if (targetFoldId[0].includes(file.folderId)) {\r\n          file.checked = action.payload.checked;\r\n        }\r\n      });\r\n\r\n      return {\r\n        ...state,\r\n      };\r\n    }\r\n    case ActionTypes.FOLDER_ADD: {\r\n      const newFolders: Fold = {\r\n        folderId: state.folders.length + 1,\r\n        name: action.payload.name,\r\n        opened: false,\r\n        count: 0,\r\n        category: action.payload.category,\r\n      };\r\n      return {\r\n        ...state,\r\n        folders: [...state.folders, newFolders],\r\n      };\r\n    }\r\n\r\n    case ActionTypes.FOLDER_DEL: {\r\n      state.folders = state.folders.filter(\r\n        (folder) => !(folder.folderId === action.payload.folderId)\r\n      );\r\n      state.files = state.files.filter(\r\n        (file) => !(file.folderId === action.payload.folderId)\r\n      );\r\n      return {\r\n        ...state,\r\n      };\r\n    }\r\n\r\n    case ActionTypes.FILE_ADD: {\r\n      let maxIndex = 1;\r\n      const targetFiles = state.files.filter(\r\n        (file) => file.folderId === action.payload.folderId\r\n      );\r\n      targetFiles.forEach((file) => {\r\n        maxIndex = maxIndex < file.fileId ? file.fileId : maxIndex;\r\n      });\r\n      const newFiles: File = {\r\n        folderId: action.payload.folderId,\r\n        fileId: maxIndex + 1,\r\n        name: action.payload.name,\r\n        text: action.payload.text,\r\n        checked: false,\r\n        listening: false,\r\n        indicate: true,\r\n      };\r\n      return {\r\n        ...state,\r\n        files: [...state.files, newFiles],\r\n      };\r\n    }\r\n\r\n    case ActionTypes.FILE_DEL: {\r\n      state.files = state.files.filter(\r\n        (file) =>\r\n          !(\r\n            file.folderId === action.payload.folderId &&\r\n            file.fileId === action.payload.fileId\r\n          )\r\n      );\r\n      return {\r\n        ...state,\r\n      };\r\n    }\r\n\r\n    case ActionTypes.MUSIC_START: {\r\n      alert(\"music.start\");\r\n      return {\r\n        ...state,\r\n      };\r\n    }\r\n    case ActionTypes.MUSIC_STOP: {\r\n      alert(\"music.stop\");\r\n      return {\r\n        ...state,\r\n      };\r\n    }\r\n    case ActionTypes.MUSIC_END: {\r\n      alert(\"music.end\");\r\n      return {\r\n        ...state,\r\n      };\r\n    }\r\n\r\n    default: {\r\n      return state;\r\n    }\r\n  }\r\n};\r\n\r\nexport default speakReducer;\r\n","import actions from \"./actions\";\r\n\r\nexport default {\r\n  loginAction: actions.loginAction,\r\n  changeType: actions.changeType,\r\n  changeSearch: actions.changeSearch,\r\n  clickFolder: actions.clickFolder,\r\n  clickPlay: actions.clickPlay,\r\n  clickFile: actions.clickFile,\r\n  clickAll: actions.clickAll,\r\n  folderAdd: actions.folderAdd,\r\n  folderDel: actions.folderDel,\r\n  fileAdd: actions.fileAdd,\r\n  fileDel: actions.fileDel,\r\n  musicStart: actions.musicStart,\r\n  musicStop: actions.musicStop,\r\n  musicEnd: actions.musicEnd,\r\n};\r\n","import React, { FC } from \"react\";\r\nimport {\r\n  withStyles,\r\n  WithStyles,\r\n  StyleRules,\r\n  Theme,\r\n} from \"@material-ui/core/styles\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Link from \"@material-ui/core/Link\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { AnimateKeyframes } from \"react-simple-animate\";\r\nimport Alert from \"@material-ui/lab/Alert\";\r\nimport Collapse from \"@material-ui/core/Collapse\";\r\n\r\nconst styles = (theme: Theme): StyleRules => ({\r\n  root: {\r\n    width: \"100%\",\r\n    height: \"100%\",\r\n    paddingTop: \"12px\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n  },\r\n  inputZone: {\r\n    width: \"90%\",\r\n    height: \"70%\",\r\n    paddingTop: \"60px\",\r\n    textAlign: \"center\",\r\n    margin: \"0 auto\",\r\n    border: \"2px solid #666666\",\r\n    borderRadius: \"12px\",\r\n    boxShadow: \"3px 3px 3px #666666\",\r\n  },\r\n});\r\n\r\ninterface OwnProps {\r\n  loginAuth: boolean;\r\n  loginAction: (id: string, pw: string) => void;\r\n}\r\n\r\ntype Props = WithStyles<typeof styles> & OwnProps;\r\ntype AlertType = \"success\" | \"error\" | \"warning\" | \"info\";\r\n\r\nconst Login: FC<Props> = ({ classes, loginAuth, loginAction }) => {\r\n  const [mail, setMail] = React.useState(\"\");\r\n  const [password, setPassword] = React.useState(\"\");\r\n  const [alertType, setErrorType] = React.useState<AlertType>(\"success\");\r\n  const [isErrorOpen, setErrorOpen] = React.useState(false);\r\n  const [errorMessage, setErrorMessage] = React.useState(\"\");\r\n\r\n  const handleLogin = () => {\r\n    if ((mail === \"\" || password === \"\") && !loginAuth) {\r\n      setErrorType(\"error\");\r\n      setErrorOpen(true);\r\n      setErrorMessage(\r\n        \"入力したメールアドレス、もしくはパスワードが間違っています。\"\r\n      );\r\n    } else {\r\n      loginAction(mail, password);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Collapse in={isErrorOpen}>\r\n        <Alert\r\n          severity={alertType}\r\n          onClick={() => {\r\n            setErrorOpen(false);\r\n          }}\r\n        >\r\n          {errorMessage}\r\n        </Alert>\r\n      </Collapse>\r\n      <Paper className={classes.root}>\r\n        <div className={classes.inputZone}>\r\n          <AnimateKeyframes\r\n            play={true}\r\n            pause={false}\r\n            iterationCount=\"1\"\r\n            direction=\"alternate\"\r\n            duration={3}\r\n            keyframes={[\"opacity: 0\", \"opacity: 1\"]}\r\n          >\r\n            <Typography variant=\"h2\" component=\"h2\">\r\n              Learn Speak\r\n            </Typography>\r\n          </AnimateKeyframes>\r\n          <FormControl>\r\n            <TextField\r\n              id=\"mail-address\"\r\n              label=\"メールアドレス\"\r\n              type=\"mail-address\"\r\n              style={{ marginTop: \"12px\" }}\r\n              value={mail}\r\n              autoComplete={\"off\"}\r\n              onChange={(event) => {\r\n                setMail(event.target.value);\r\n              }}\r\n            />\r\n            <TextField\r\n              id=\"password\"\r\n              label=\"パスワード\"\r\n              type=\"password\"\r\n              style={{ marginTop: \"12px\" }}\r\n              value={password}\r\n              autoComplete={\"off\"}\r\n              onChange={(event) => {\r\n                setPassword(event.target.value);\r\n              }}\r\n            />\r\n            <Button\r\n              variant=\"contained\"\r\n              color=\"secondary\"\r\n              style={{ marginTop: \"24px\" }}\r\n              onClick={handleLogin}\r\n            >\r\n              ログイン\r\n            </Button>\r\n            <Link\r\n              href=\"#\"\r\n              onClick={() => {\r\n                alert(\r\n                  \"ヒント：メールアドレス・パスワードの両方に入力してみよう！\"\r\n                );\r\n              }}\r\n              style={{ fontSize: \"14px\", marginTop: \"8px\" }}\r\n            >\r\n              ログインに困った場合\r\n            </Link>\r\n          </FormControl>\r\n        </div>\r\n      </Paper>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default withStyles(styles)(Login);\r\n","import React, { FC, useEffect, useState } from \"react\";\r\nimport { Fold } from \"speak\";\r\nimport {\r\n  withStyles,\r\n  WithStyles,\r\n  StyleRules,\r\n  Theme,\r\n} from \"@material-ui/core/styles\";\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport Collapse from \"@material-ui/core/Collapse\";\r\nimport InboxIcon from \"@material-ui/icons/MoveToInbox\";\r\nimport ExpandLess from \"@material-ui/icons/ExpandLess\";\r\nimport ExpandMore from \"@material-ui/icons/ExpandMore\";\r\nimport Folder from \"@material-ui/icons/Folder\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport Input from \"@material-ui/core/Input\";\r\nimport Fab from \"@material-ui/core/Fab\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport Check from \"@material-ui/icons/Check\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Alert from \"@material-ui/lab/Alert\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nconst styles = (theme: Theme): StyleRules => ({\r\n  root: {\r\n    maxWidth: 360,\r\n    backgroundColor: theme.palette.background.paper,\r\n    display: \"block\",\r\n    position: \"relative\",\r\n  },\r\n  formControl: {\r\n    margin: theme.spacing(1),\r\n    minWidth: 300,\r\n    display: \"inline-block\",\r\n  },\r\n});\r\n\r\ninterface OwnProps {\r\n  folders: Fold[];\r\n  clickFolder: (id: string, opened: boolean) => void;\r\n  folderAdd: (name: string, category: string) => void;\r\n  folderDel: (folderId: number) => void;\r\n}\r\n\r\ntype Props = WithStyles<typeof styles> & OwnProps;\r\ntype AlertType = \"success\" | \"error\" | \"warning\" | \"info\";\r\n\r\nconst SideBar: FC<Props> = ({\r\n  classes,\r\n  folders,\r\n  clickFolder,\r\n  folderAdd,\r\n  folderDel,\r\n}) => {\r\n  const [isDialogOpen, setDialogOpen] = useState(false);\r\n  const [delFolderId, setDelFolderId] = useState(0);\r\n  const [confirmMessage, setConfirmMessage] = useState(\"\");\r\n  const [alertType, setErrorType] = useState<AlertType>(\"success\");\r\n  const [isErrorOpen, setErrorOpen] = useState(false);\r\n  const [errorMessage, setErrorMessage] = useState(\"\");\r\n  const [openBox, setOpenBox] = React.useState(true);\r\n  const [openModal, setOpenModal] = React.useState(false);\r\n  const [folderName, setFolderName] = React.useState(\"\");\r\n  const [folderCategory, setFolderCategory] = React.useState(\"action\");\r\n\r\n  useEffect(() => {\r\n    setOpenModal(openModal);\r\n  }, [openModal]);\r\n\r\n  function setInit() {\r\n    setFolderName(\"\");\r\n    setFolderCategory(\"\");\r\n  }\r\n\r\n  const handleFolderAdd = (name: string, category: string) => {\r\n    if (!name || name === \"\") {\r\n      setError(\"error\", true, \"フォルダ名を入力してください。\");\r\n    } else {\r\n      folderAdd(name, category);\r\n      setInit();\r\n      setError(\"success\", true, \"登録しました。\");\r\n    }\r\n  };\r\n  function setError(alertType: AlertType, isError: boolean, message: string) {\r\n    setErrorType(alertType);\r\n    setErrorOpen(isError);\r\n    setErrorMessage(message);\r\n  }\r\n\r\n  const handleFolderNameChange = (\r\n    event: React.ChangeEvent<{ value: unknown }>\r\n  ) => {\r\n    setFolderCategory(event.target.value as string);\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Collapse in={isErrorOpen}>\r\n        <Alert\r\n          severity={alertType}\r\n          onClick={() => {\r\n            setErrorOpen(false);\r\n          }}\r\n        >\r\n          {errorMessage}\r\n        </Alert>\r\n      </Collapse>\r\n      <FormControl\r\n        style={{\r\n          width: \"100%\",\r\n          display: \"inline-block\",\r\n        }}\r\n      >\r\n        <FormControl\r\n          style={{\r\n            width: \"50%\",\r\n            display: \"inline-block\",\r\n            marginLeft: \"16px\",\r\n          }}\r\n        >\r\n          <InputLabel htmlFor=\"input-folder\">フォルダ名</InputLabel>\r\n          <Input\r\n            id=\"input-folder\"\r\n            style={{ width: \"100%\" }}\r\n            value={folderName}\r\n            onChange={(event) => {\r\n              setFolderName(event.target.value);\r\n            }}\r\n          />\r\n        </FormControl>\r\n        <FormControl\r\n          style={{\r\n            width: \"16%\",\r\n            display: \"inline-block\",\r\n            marginLeft: \"12px\",\r\n            marginTop: \"18px\",\r\n          }}\r\n        >\r\n          <Select\r\n            id=\"demo-simple-select\"\r\n            labelId=\"demo-simple-select-label\"\r\n            style={{\r\n              width: \"100%\",\r\n              height: \"30px\",\r\n            }}\r\n            value={folderCategory}\r\n            onChange={handleFolderNameChange}\r\n          >\r\n            <MenuItem value=\"action\">\r\n              <Folder color=\"action\" />\r\n            </MenuItem>\r\n            <MenuItem value=\"disabled\">\r\n              <Folder color=\"disabled\" />\r\n            </MenuItem>\r\n            <MenuItem value=\"primary\">\r\n              <Folder color=\"primary\" />\r\n            </MenuItem>\r\n            <MenuItem value=\"secondary\">\r\n              <Folder color=\"secondary\" />\r\n            </MenuItem>\r\n            <MenuItem value=\"error\">\r\n              <Folder color=\"error\" />\r\n            </MenuItem>\r\n          </Select>\r\n        </FormControl>\r\n        <span\r\n          style={{\r\n            float: \"right\",\r\n            marginRight: \"12px\",\r\n            marginTop: \"12px\",\r\n            marginBottom: \"8px\",\r\n          }}\r\n        >\r\n          <Fab\r\n            color=\"default\"\r\n            aria-label=\"add\"\r\n            size=\"small\"\r\n            onClick={() => {\r\n              handleFolderAdd(folderName, folderCategory);\r\n            }}\r\n          >\r\n            <AddIcon />\r\n          </Fab>\r\n        </span>\r\n      </FormControl>\r\n      <List\r\n        component=\"nav\"\r\n        aria-labelledby=\"nested-list-subheader\"\r\n        className={classes.root}\r\n      >\r\n        <ListItem\r\n          style={{ width: \"80%\" }}\r\n          button\r\n          onClick={() => {\r\n            setOpenBox(!openBox);\r\n          }}\r\n        >\r\n          <span style={{ marginRight: \"12px\" }}>\r\n            <InboxIcon />\r\n          </span>\r\n          <ListItemText primary=\"Sound Box\" />\r\n          {openBox ? <ExpandLess /> : <ExpandMore />}\r\n        </ListItem>\r\n        <Collapse in={openBox} timeout=\"auto\" unmountOnExit>\r\n          <List component=\"div\" disablePadding style={{ marginLeft: \"20px\" }}>\r\n            {folders.map((folder) => (\r\n              <React.Fragment key={folder.folderId + folder.name}>\r\n                <ListItem\r\n                  style={{ width: \"90%\" }}\r\n                  button\r\n                  onClick={() => {\r\n                    clickFolder(folder.folderId, folder.opened);\r\n                  }}\r\n                >\r\n                  <span style={{ marginRight: \"12px\" }}>\r\n                    {getFolderIcon(folder.category)}\r\n                  </span>\r\n                  <ListItemText\r\n                    style={{ overflow: \"hidden\" }}\r\n                    primary={folder.name}\r\n                  ></ListItemText>\r\n                  {folder.opened ? <Check /> : \"\"}\r\n                  <IconButton\r\n                    edge=\"end\"\r\n                    size=\"small\"\r\n                    onClick={() => {\r\n                      setDialogOpen(true);\r\n                      setConfirmMessage(\r\n                        \"「\" +\r\n                          folder.name +\r\n                          \"」を削除してもよろしいでしょうか？\"\r\n                      );\r\n                      setDelFolderId(folder.folderId);\r\n                    }}\r\n                  >\r\n                    <DeleteIcon />\r\n                  </IconButton>\r\n                </ListItem>\r\n              </React.Fragment>\r\n            ))}\r\n            <Dialog\r\n              open={isDialogOpen}\r\n              onClose={() => setDialogOpen(false)}\r\n              aria-labelledby=\"alert-dialog-title\"\r\n              aria-describedby=\"alert-dialog-description\"\r\n            >\r\n              <DialogTitle id=\"alert-dialog-title\">\r\n                {confirmMessage}\r\n              </DialogTitle>\r\n              <DialogTitle id=\"alert-dialog-title\"></DialogTitle>\r\n              <DialogContent>\r\n                <DialogContentText id=\"alert-dialog-description\"></DialogContentText>\r\n              </DialogContent>\r\n              <DialogActions>\r\n                <Button\r\n                  onClick={() => {\r\n                    folderDel(delFolderId);\r\n                    setDialogOpen(false);\r\n                  }}\r\n                  color=\"primary\"\r\n                >\r\n                  はい\r\n                </Button>\r\n                <Button\r\n                  onClick={() => {\r\n                    setDialogOpen(false);\r\n                  }}\r\n                  color=\"primary\"\r\n                >\r\n                  いいえ\r\n                </Button>\r\n              </DialogActions>\r\n            </Dialog>\r\n          </List>\r\n        </Collapse>\r\n      </List>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nconst getFolderIcon = (type: string) => {\r\n  switch (type) {\r\n    case \"action\":\r\n      return <Folder color=\"action\" />;\r\n    case \"disabled\":\r\n      return <Folder color=\"disabled\" />;\r\n    case \"primary\":\r\n      return <Folder color=\"primary\" />;\r\n    case \"secondary\":\r\n      return <Folder color=\"secondary\" />;\r\n    case \"error\":\r\n      return <Folder color=\"error\" />;\r\n    default:\r\n      return <Folder />;\r\n  }\r\n};\r\n\r\nexport default withStyles(styles)(SideBar);\r\n","import React, { FC } from \"react\";\r\nimport { Fold } from \"speak\";\r\nimport SideBar from \"./SideBar\";\r\nimport {\r\n  fade,\r\n  withStyles,\r\n  WithStyles,\r\n  StyleRules,\r\n  Theme,\r\n} from \"@material-ui/core/styles\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport InputBase from \"@material-ui/core/InputBase\";\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\nimport Fab from \"@material-ui/core/Fab\";\r\nimport TwitterIcon from \"@material-ui/icons/Twitter\";\r\nimport InstagramIcon from \"@material-ui/icons/Instagram\";\r\nimport GitHubIcon from \"@material-ui/icons/GitHub\";\r\nimport ExitToApp from \"@material-ui/icons/ExitToApp\";\r\nimport Switch from \"@material-ui/core/Switch\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport Drawer from \"@material-ui/core/Drawer\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\n\r\nconst styles = (theme: Theme): StyleRules => ({\r\n  root: {\r\n    width: \"100%\",\r\n    maxWidth: 360,\r\n    backgroundColor: theme.palette.background.paper,\r\n    flexGrow: 1,\r\n  },\r\n  nested: {\r\n    paddingLeft: theme.spacing(4),\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n    width: \"30%\",\r\n    textAlign: \"left\",\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      display: \"block\",\r\n    },\r\n  },\r\n  search: {\r\n    position: \"relative\",\r\n    borderRadius: theme.shape.borderRadius,\r\n    backgroundColor: fade(theme.palette.common.white, 0.15),\r\n    \"&:hover\": {\r\n      backgroundColor: fade(theme.palette.common.white, 0.25),\r\n    },\r\n    marginLeft: 0,\r\n    width: \"30%\",\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      marginLeft: theme.spacing(1),\r\n      width: \"auto\",\r\n    },\r\n  },\r\n  searchIcon: {\r\n    padding: theme.spacing(0, 1),\r\n    height: \"100%\",\r\n    position: \"absolute\",\r\n    pointerEvents: \"none\",\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n  },\r\n  inputRoot: {\r\n    color: \"inherit\",\r\n  },\r\n  inputInput: {\r\n    padding: theme.spacing(1, 1, 1, 0),\r\n    // vertical padding + font size from searchIcon\r\n    paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\r\n    transition: theme.transitions.create(\"width\"),\r\n    width: \"100%\",\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      width: \"12ch\",\r\n      \"&:focus\": {\r\n        width: \"20ch\",\r\n      },\r\n    },\r\n  },\r\n});\r\n\r\ninterface OwnProps {\r\n  type: string;\r\n  loginAction: (id: string, pw: string) => void;\r\n  changeSearch: (text: string) => void;\r\n  changeType: (type: string) => void;\r\n  folders: Fold[];\r\n  clickFolder: (id: string, opened: boolean) => void;\r\n  folderAdd: (name: string, category: string) => void;\r\n  folderDel: (folderId: number) => void;\r\n}\r\n\r\ntype Props = WithStyles<typeof styles> & OwnProps;\r\n\r\nconst Header: FC<Props> = ({\r\n  classes,\r\n  type,\r\n  loginAction,\r\n  changeSearch,\r\n  changeType,\r\n  folders,\r\n  clickFolder,\r\n  folderAdd,\r\n  folderDel,\r\n}) => {\r\n  const [isLinkOpen, setLinkOpen] = React.useState(false);\r\n  const [linkMessage, setLinkMessage] = React.useState(\"\");\r\n  const [link, setLink] = React.useState(\"\");\r\n  const [isLoginDialogOpen, setLoginDialogOpen] = React.useState(false);\r\n  const [isDrawerOpen, setDrawerOpen] = React.useState(true);\r\n  const [isType, setType] = React.useState(type === \"dark\");\r\n  const drawerRef = React.createRef();\r\n\r\n  const useHandleLogout = () => {\r\n    setLoginDialogOpen(true);\r\n  };\r\n  const handleClick = (event: React.MouseEvent<HTMLButtonElement>) => {\r\n    // setAnchorEl(event.currentTarget);\r\n    setDrawerOpen(true);\r\n  };\r\n  const handleType = () => {\r\n    setType(!isType);\r\n    changeType(isType ? \"light\" : \"dark\");\r\n  };\r\n\r\n  const handleLink = (message: string, link: string) => {\r\n    setLinkOpen(true);\r\n    setLinkMessage(message);\r\n    setLink(link);\r\n  };\r\n\r\n  const toggleDrawer = (open: boolean) => (\r\n    event: React.KeyboardEvent | React.MouseEvent\r\n  ) => {\r\n    if (\r\n      event.type === \"keydown\" &&\r\n      ((event as React.KeyboardEvent).key === \"Tab\" ||\r\n        (event as React.KeyboardEvent).key === \"Shift\")\r\n    ) {\r\n      return;\r\n    } else {\r\n      setDrawerOpen(false);\r\n    }\r\n  };\r\n\r\n  const drawer = (\r\n    <div\r\n      style={{\r\n        minWidth: \"30%\",\r\n        width: \"100%\",\r\n        height: \"100%\",\r\n        position: \"relative\",\r\n      }}\r\n      role=\"presentation\"\r\n    >\r\n      <SideBar\r\n        folders={folders}\r\n        clickFolder={clickFolder}\r\n        folderAdd={folderAdd}\r\n        folderDel={folderDel}\r\n      />\r\n      <div style={{ position: \"absolute\", bottom: \"12px\", right: \"12px\" }}>\r\n        <Fab\r\n          color=\"inherit\"\r\n          aria-label=\"Open Twitter\"\r\n          size=\"small\"\r\n          style={\r\n            type === \"dark\"\r\n              ? { backgroundColor: \"#424242\", marginRight: \"4px\" }\r\n              : { backgroundColor: \"#fff\", marginRight: \"4px\" }\r\n          }\r\n          onClick={() => {\r\n            handleLink(\r\n              \"開発者のTwitterを開きます。\",\r\n              \"https://twitter.com/nakapooooon\"\r\n            );\r\n          }}\r\n        >\r\n          <TwitterIcon color=\"action\" style={{ color: \"#CCCCCC\" }} />\r\n        </Fab>\r\n        <Fab\r\n          color=\"default\"\r\n          aria-label=\"Open Instagram\"\r\n          size=\"small\"\r\n          style={\r\n            type === \"dark\"\r\n              ? { backgroundColor: \"#424242\", marginRight: \"4px\" }\r\n              : { backgroundColor: \"#fff\", marginRight: \"4px\" }\r\n          }\r\n          onClick={() => {\r\n            handleLink(\r\n              \"開発者のInstagramを開きます。\",\r\n              \"https://www.instagram.com/nakapooooon/?hl=ja\"\r\n            );\r\n          }}\r\n        >\r\n          <InstagramIcon color=\"action\" style={{ color: \"#CCCCCC\" }} />\r\n        </Fab>\r\n        <Fab\r\n          color=\"primary\"\r\n          aria-label=\"Open GitHub\"\r\n          size=\"small\"\r\n          style={\r\n            type === \"dark\"\r\n              ? { backgroundColor: \"#424242\" }\r\n              : { backgroundColor: \"#fff\" }\r\n          }\r\n          onClick={() => {\r\n            handleLink(\r\n              \"開発者のGitHubを開きます。\",\r\n              \"https://github.com/nakapon9517/learn-speak\"\r\n            );\r\n          }}\r\n        >\r\n          <GitHubIcon color=\"action\" style={{ color: \"#CCCCCC\" }} />\r\n        </Fab>\r\n        <Dialog\r\n          open={isLinkOpen}\r\n          onClose={() => setLinkOpen(false)}\r\n          aria-labelledby=\"alert-dialog-title\"\r\n          aria-describedby=\"alert-dialog-description\"\r\n        >\r\n          <DialogTitle id=\"alert-dialog-title\">\r\n            {linkMessage + \"よろしいでしょうか？\"}\r\n          </DialogTitle>\r\n          <DialogTitle id=\"alert-dialog-title\"></DialogTitle>\r\n          <DialogContent>\r\n            <DialogContentText id=\"alert-dialog-description\"></DialogContentText>\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <Button\r\n              onClick={() => {\r\n                document.location.href = link;\r\n              }}\r\n              color=\"primary\"\r\n            >\r\n              はい\r\n            </Button>\r\n          </DialogActions>\r\n        </Dialog>\r\n      </div>\r\n    </div>\r\n  );\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <AppBar position=\"static\">\r\n        <Toolbar>\r\n          <IconButton\r\n            edge=\"start\"\r\n            color=\"inherit\"\r\n            aria-label=\"open drawer\"\r\n            onClick={handleClick}\r\n          >\r\n            <MenuIcon />\r\n          </IconButton>\r\n          <Drawer\r\n            ref={drawerRef}\r\n            anchor={\"left\"}\r\n            open={isDrawerOpen}\r\n            onClose={toggleDrawer(false)}\r\n          >\r\n            {drawer}\r\n          </Drawer>\r\n          <Typography className={classes.title} variant=\"h6\" noWrap>\r\n            Learn Speak\r\n          </Typography>\r\n          <Switch\r\n            defaultChecked\r\n            color=\"default\"\r\n            inputProps={{ \"aria-label\": \"checkbox with default color\" }}\r\n            checked={isType}\r\n            onChange={handleType}\r\n          />\r\n          <div className={classes.search}>\r\n            <div className={classes.searchIcon}>\r\n              <SearchIcon />\r\n            </div>\r\n            <InputBase\r\n              placeholder=\"検索…\"\r\n              classes={{\r\n                root: classes.inputRoot,\r\n                input: classes.inputInput,\r\n              }}\r\n              inputProps={{ \"aria-label\": \"search\" }}\r\n              onChange={(event) => {\r\n                changeSearch(event.target.value);\r\n              }}\r\n            />\r\n          </div>\r\n          <MenuItem\r\n            onClick={useHandleLogout}\r\n            style={{ marginLeft: \"4px\", padding: \"0 4px 0 4px\" }}\r\n          >\r\n            <ExitToApp />\r\n          </MenuItem>\r\n          <Dialog\r\n            open={isLoginDialogOpen}\r\n            onClose={() => setLoginDialogOpen(false)}\r\n          >\r\n            <DialogTitle id=\"alert-dialog-title\">\r\n              ログアウトしてもよろしいでしょうか？\r\n            </DialogTitle>\r\n            <DialogContent>\r\n              <DialogContentText></DialogContentText>\r\n            </DialogContent>\r\n            <DialogActions>\r\n              <Button onClick={() => loginAction(\"\", \"\")} color=\"primary\">\r\n                はい\r\n              </Button>\r\n            </DialogActions>\r\n          </Dialog>\r\n        </Toolbar>\r\n      </AppBar>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default withStyles(styles)(Header);\r\n","export async function execute(text) {\r\n  if (\"SpeechSynthesisUtterance\" in window) {\r\n    // var voices = window.speechSynthesis.getVoices();\r\n\r\n    let options = new SpeechSynthesisUtterance(text);\r\n    options.lang = \"ja-JP\";\r\n    // options.voice = voices[7];\r\n    options.rate = 1.0;\r\n    options.pitch = 1.0;\r\n\r\n    await window.speechSynthesis.speak(options);\r\n    return true;\r\n  } else {\r\n    alert(\"Speech synthesis(音声合成) APIには未対応です.\");\r\n    return false;\r\n  }\r\n}\r\n","import React, { FC, ChangeEvent, useState } from \"react\";\r\nimport { Fold, File } from \"speak\";\r\nimport {\r\n  withStyles,\r\n  WithStyles,\r\n  StyleRules,\r\n  Theme,\r\n} from \"@material-ui/core/styles\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport MusicNote from \"@material-ui/icons/MusicNote\";\r\n// import EditIcon from \"@material-ui/icons/Edit\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport PlayCircleOutline from \"@material-ui/icons/PlayCircleOutline\";\r\nimport Fab from \"@material-ui/core/Fab\";\r\nimport Folder from \"@material-ui/icons/Folder\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport Spinner from \"react-spinkit\";\r\nimport { execute } from \"./voice\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport Input from \"@material-ui/core/Input\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport Alert from \"@material-ui/lab/Alert\";\r\nimport Collapse from \"@material-ui/core/Collapse\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\n\r\nconst styles = (theme: Theme): StyleRules => ({\r\n  root: {\r\n    backgroundColor: theme.palette.background.paper,\r\n    display: \"block\",\r\n    paddingRight: \"10px\",\r\n  },\r\n  title: {\r\n    width: \"20%\",\r\n    overflow: \"hidden\",\r\n    textOverflow: \"ellipsis\",\r\n  },\r\n  text: {\r\n    width: \"40%\",\r\n    marginLeft: \"8px\",\r\n    overflow: \"hidden\",\r\n    textOverflow: \"ellipsis\",\r\n  },\r\n  iconButtonGroup: {\r\n    width: \"16%\",\r\n    textAlign: \"right\",\r\n    display: \"inline-block\",\r\n  },\r\n});\r\n\r\ninterface OwnProps {\r\n  folders: Fold[];\r\n  files: File[];\r\n  clickPlay: (folderId: number, fileId: number, playBefore: boolean) => void;\r\n  clickFile: (folderId: number, fileId: number, checked: boolean) => void;\r\n  clickAll: (checked: boolean) => void;\r\n  fileAdd: (folderId: number, name: string, text: string) => void;\r\n  fileDel: (folderId: number, fileId: number) => void;\r\n}\r\n\r\ntype Props = WithStyles<typeof styles> & OwnProps;\r\ntype AlertType = \"success\" | \"error\" | \"warning\" | \"info\";\r\n\r\nconst Body: FC<Props> = ({\r\n  classes,\r\n  folders,\r\n  files,\r\n  clickPlay,\r\n  clickFile,\r\n  clickAll,\r\n  fileAdd,\r\n  fileDel,\r\n}) => {\r\n  const DEFAULT_CATEGORY = 999;\r\n  const [isDialogOpen, setDialogOpen] = useState(false);\r\n  const [dialogMessage, setDialogMessage] = React.useState(\"\");\r\n  const [deleteFolderId, setDeleteFolderId] = React.useState(0);\r\n  const [deleteFileId, setDeleteFileId] = React.useState(0);\r\n  const [alertType, setErrorType] = useState<AlertType>(\"success\");\r\n  const [isErrorOpen, setErrorOpen] = useState(false);\r\n  const [errorMessage, setErrorMessage] = useState(\"\");\r\n  const [allCheck, setAllCheck] = useState(false);\r\n  const [inputName, setInputName] = useState(\"\");\r\n  const [inputText, setInputText] = useState(\"\");\r\n  const [inputCategory, setInputCategory] = useState(DEFAULT_CATEGORY);\r\n\r\n  const targetFoldersId = folders\r\n    .filter((fold) => fold.opened)\r\n    .map((fold) => fold.folderId);\r\n  const targetFiles = files.filter(\r\n    (file) => targetFoldersId.indexOf(file.folderId) !== -1 && file.indicate\r\n  );\r\n\r\n  const handlerSpeak = (\r\n    folderId: number,\r\n    fileId: number,\r\n    name: string,\r\n    text: string\r\n  ) => {\r\n    if (folderId === 0 || fileId === 0) {\r\n      clickPlay(folderId, fileId, true);\r\n      const targetFoldId = [\r\n        folders\r\n          .filter((fold) => fold.opened === true)\r\n          .map((fold) => {\r\n            return fold.folderId;\r\n          }),\r\n      ];\r\n      const targetFiles = files.filter(\r\n        (file) => targetFoldId[0].includes(file.folderId) && file.checked\r\n      );\r\n      if (targetFiles.length > 0) {\r\n        targetFiles.forEach((file) => {\r\n          execute(file.name);\r\n          execute(file.text);\r\n        });\r\n      } else {\r\n        setError(\"warning\", true, \"1つ以上チェックしてください。\");\r\n      }\r\n    } else {\r\n      (async () => {\r\n        execute(name);\r\n        execute(text);\r\n      })();\r\n    }\r\n  };\r\n\r\n  const handleInputNameChange = (event: ChangeEvent<{ value: unknown }>) => {\r\n    setInputName(event.target.value as string);\r\n  };\r\n  const handleInputTextChange = (event: ChangeEvent<{ value: unknown }>) => {\r\n    setInputText(event.target.value as string);\r\n  };\r\n  const handleCategoryChange = (event: ChangeEvent<{ value: unknown }>) => {\r\n    setInputCategory(event.target.value as number);\r\n  };\r\n\r\n  function setInit() {\r\n    setInputName(\"\");\r\n    setInputText(\"\");\r\n    setInputCategory(folders[0].folderId);\r\n  }\r\n\r\n  function useHandleFileAdd() {\r\n    if (!inputName || inputName === \"\") {\r\n      setError(\"error\", true, \"ファイル名を入力してください。\");\r\n    } else if (!inputText || inputText === \"\") {\r\n      setError(\"error\", true, \"テキストを入力してください。\");\r\n    } else if (inputCategory === DEFAULT_CATEGORY) {\r\n      setError(\"error\", true, \"フォルダを選択してください。\");\r\n    } else {\r\n      fileAdd(inputCategory, inputName, inputText);\r\n      setInit();\r\n      setError(\"success\", true, \"登録しました。\");\r\n    }\r\n  }\r\n\r\n  function setError(alertType: AlertType, isError: boolean, message: string) {\r\n    setErrorType(alertType);\r\n    setErrorOpen(isError);\r\n    setErrorMessage(message);\r\n  }\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Collapse in={isErrorOpen}>\r\n        <Alert\r\n          severity={alertType}\r\n          onClick={() => {\r\n            setErrorOpen(false);\r\n          }}\r\n        >\r\n          {errorMessage}\r\n        </Alert>\r\n      </Collapse>\r\n      <FormControl\r\n        style={{\r\n          width: \"96%\",\r\n          display: \"inline-block\",\r\n        }}\r\n      >\r\n        <FormControl\r\n          style={{\r\n            height: \"24px\",\r\n            marginLeft: \"16px\",\r\n            marginTop: \"11px\",\r\n          }}\r\n        >\r\n          <Checkbox\r\n            edge=\"start\"\r\n            checked={allCheck}\r\n            tabIndex={-1}\r\n            onClick={() => {\r\n              const check = !allCheck;\r\n              setAllCheck(check);\r\n              clickAll(check);\r\n            }}\r\n          />\r\n        </FormControl>\r\n        {/* Name入力 */}\r\n        <FormControl\r\n          style={{\r\n            width: \"30%\",\r\n            display: \"inline-block\",\r\n          }}\r\n        >\r\n          <InputLabel>ファイル名</InputLabel>\r\n          <Input\r\n            id=\"input-name\"\r\n            style={{ width: \"100%\" }}\r\n            value={inputName}\r\n            onChange={handleInputNameChange}\r\n            autoComplete={\"false\"}\r\n          ></Input>\r\n        </FormControl>\r\n        {/* Text入力 */}\r\n        <FormControl\r\n          style={{\r\n            width: \"30%\",\r\n            display: \"inline-block\",\r\n            marginLeft: \"12px\",\r\n          }}\r\n        >\r\n          <InputLabel>テキスト</InputLabel>\r\n          <Input\r\n            id=\"input-text\"\r\n            style={{ width: \"100%\" }}\r\n            value={inputText}\r\n            onChange={handleInputTextChange}\r\n            autoComplete={\"false\"}\r\n          ></Input>\r\n        </FormControl>\r\n        {/* フォルダ選択 */}\r\n        <FormControl\r\n          style={{\r\n            width: \"16%\",\r\n            display: \"inline-block\",\r\n            marginLeft: \"12px\",\r\n          }}\r\n        >\r\n          <Select\r\n            id=\"demo-simple-select\"\r\n            style={{\r\n              width: \"100%\",\r\n              height: \"30px\",\r\n              marginTop: \"18px\",\r\n            }}\r\n            value={inputCategory}\r\n            onChange={handleCategoryChange}\r\n          >\r\n            {folders.map((folder) => (\r\n              <MenuItem\r\n                value={folder.folderId}\r\n                key={folder.folderId + folder.name}\r\n              >\r\n                <ListItem\r\n                  style={{\r\n                    height: \"24px\",\r\n                    overflow: \"hidden\",\r\n                    fontSize: \"8px\",\r\n                  }}\r\n                >\r\n                  {getFolderIcon(folder.category)}\r\n                  {\"　\"}\r\n                  <ListItemText primary={folder.name}></ListItemText>\r\n                </ListItem>\r\n              </MenuItem>\r\n            ))}\r\n          </Select>\r\n        </FormControl>\r\n        <FormControl\r\n          style={{\r\n            marginRight: \"4px\",\r\n            marginTop: \"8px\",\r\n          }}\r\n        >\r\n          <div style={{ display: \"inline-block\" }}>\r\n            <Fab\r\n              color=\"default\"\r\n              aria-label=\"add\"\r\n              size=\"small\"\r\n              style={{\r\n                marginLeft: \"4px\",\r\n                marginRight: \"8px\",\r\n                marginBottom: \"8px\",\r\n              }}\r\n              onClick={useHandleFileAdd}\r\n            >\r\n              <AddIcon />\r\n            </Fab>\r\n            <Button\r\n              variant=\"contained\"\r\n              color=\"secondary\"\r\n              size=\"small\"\r\n              endIcon={<PlayCircleOutline />}\r\n              onClick={() => {\r\n                handlerSpeak(0, 0, \"\", \"\");\r\n              }}\r\n            >\r\n              Play\r\n            </Button>\r\n          </div>\r\n        </FormControl>\r\n      </FormControl>\r\n      <List component=\"nav\" className={classes.root}>\r\n        {targetFiles.map((file, index) => (\r\n          <React.Fragment\r\n            key={String(file.folderId) + \"-\" + String(file.fileId)}\r\n          >\r\n            <ListItem\r\n              key={file.fileId}\r\n              role={undefined}\r\n              dense\r\n              button\r\n              divider={true}\r\n              onClick={() => {\r\n                clickFile(file.folderId, file.fileId, file.checked);\r\n              }}\r\n            >\r\n              <Checkbox\r\n                edge=\"start\"\r\n                checked={file.checked}\r\n                tabIndex={-1}\r\n                disableRipple\r\n                inputProps={{\r\n                  \"aria-labelledby\": `checkbox-list-label-${file.fileId}`,\r\n                }}\r\n                color=\"default\"\r\n              />\r\n              <ListItemText\r\n                id={`checkbox-list-name-${file.fileId}`}\r\n                primary={file.name}\r\n                className={classes.title}\r\n              />\r\n              <ListItemText\r\n                id={`checkbox-list-text-${file.fileId}`}\r\n                primary={file.text}\r\n                className={classes.text}\r\n              />\r\n              <div className={classes.iconButtonGroup}>\r\n                <IconButton edge=\"end\" size=\"small\">\r\n                  {file.listening ? (\r\n                    <Spinner name=\"line-scale\" color=\"gray\" fadeIn=\"none\" />\r\n                  ) : (\r\n                    \"\"\r\n                  )}\r\n                </IconButton>\r\n                <IconButton\r\n                  edge=\"end\"\r\n                  size=\"small\"\r\n                  onClick={() => {\r\n                    handlerSpeak(\r\n                      file.folderId,\r\n                      file.fileId,\r\n                      file.name,\r\n                      file.text\r\n                    );\r\n                  }}\r\n                >\r\n                  <MusicNote />\r\n                </IconButton>\r\n                <IconButton\r\n                  edge=\"end\"\r\n                  size=\"small\"\r\n                  onClick={() => {\r\n                    setDialogOpen(true);\r\n                    setDialogMessage(\"削除してもよろしいでしょうか？\");\r\n                    setDeleteFolderId(file.folderId);\r\n                    setDeleteFileId(file.fileId);\r\n                  }}\r\n                >\r\n                  <DeleteIcon />\r\n                </IconButton>\r\n              </div>\r\n            </ListItem>\r\n          </React.Fragment>\r\n        ))}\r\n        <Dialog\r\n          open={isDialogOpen}\r\n          onClose={() => setDialogOpen(false)}\r\n          aria-labelledby=\"alert-dialog-title\"\r\n          aria-describedby=\"alert-dialog-description\"\r\n        >\r\n          <DialogTitle id=\"alert-dialog-title\">{dialogMessage}</DialogTitle>\r\n          <DialogTitle id=\"alert-dialog-title\"></DialogTitle>\r\n          <DialogContent>\r\n            <DialogContentText id=\"alert-dialog-description\"></DialogContentText>\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <Button\r\n              onClick={() => {\r\n                fileDel(deleteFolderId, deleteFileId);\r\n                setDialogOpen(false);\r\n              }}\r\n              color=\"primary\"\r\n            >\r\n              はい\r\n            </Button>\r\n            <Button\r\n              onClick={() => {\r\n                setDialogOpen(false);\r\n              }}\r\n              color=\"primary\"\r\n            >\r\n              いいえ\r\n            </Button>\r\n          </DialogActions>\r\n        </Dialog>\r\n      </List>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nconst getFolderIcon = (type: string) => {\r\n  switch (type) {\r\n    case \"action\":\r\n      return <Folder color=\"action\" style={{ fontSize: \"20px\" }} />;\r\n    case \"disabled\":\r\n      return <Folder color=\"disabled\" style={{ fontSize: \"20px\" }} />;\r\n    case \"primary\":\r\n      return <Folder color=\"primary\" style={{ fontSize: \"20px\" }} />;\r\n    case \"secondary\":\r\n      return <Folder color=\"secondary\" style={{ fontSize: \"20px\" }} />;\r\n    case \"error\":\r\n      return <Folder color=\"error\" style={{ fontSize: \"20px\" }} />;\r\n    default:\r\n      return <Folder />;\r\n  }\r\n};\r\n\r\nexport default withStyles(styles)(Body);\r\n","import React, { FC } from \"react\";\r\nimport { Fold, File } from \"speak\";\r\nimport {\r\n  withStyles,\r\n  WithStyles,\r\n  StyleRules,\r\n  createMuiTheme,\r\n  MuiThemeProvider,\r\n  ThemeProvider,\r\n} from \"@material-ui/core/styles\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Login from \"../components/Login\";\r\nimport Header from \"../components/Header\";\r\n// import SideBar from \"../components/SideBar\";\r\nimport Body from \"../components/Body\";\r\n// import Footer from \"../components/Footer\";\r\n\r\nconst styles = (): StyleRules => ({\r\n  flex: {\r\n    display: \"flex\",\r\n  },\r\n  login: {\r\n    width: \"100vw\",\r\n    height: \"100vh\",\r\n  },\r\n  sidebar: {\r\n    width: \"40%\",\r\n    height: \"100%\",\r\n    minHeight: \"calc(100vh - 70px)\",\r\n    border: \"0.8px solid gray\",\r\n    margin: \"5px\",\r\n  },\r\n  body: {\r\n    width: \"100%\",\r\n    height: \"100%\",\r\n    minHeight: \"calc(100vh - 70px)\",\r\n    margin: \"4px 4px 4px 0px\",\r\n    border: \"0.8px solid gray\",\r\n  },\r\n  foot: {\r\n    height: \"10px\",\r\n    textAlign: \"right\",\r\n    margin: \"10px\",\r\n  },\r\n});\r\n\r\ntype Props = WithStyles<typeof styles> & {\r\n  folders: Fold[];\r\n  files: File[];\r\n  type: string;\r\n  loginAuth: boolean;\r\n  loginAction: (id: string, pw: string) => void;\r\n  changeType: (type: string) => void;\r\n  changeSearch: (text: string) => void;\r\n  clickFolder: (id: string, opened: boolean) => void;\r\n  clickPlay: (folderId: number, fileId: number, playBefore: boolean) => void;\r\n  clickFile: (folderId: number, fileId: number, checked: boolean) => void;\r\n  clickAll: (checked: boolean) => void;\r\n  folderAdd: (name: string, category: string) => void;\r\n  folderDel: (folderId: number) => void;\r\n  fileAdd: (folderId: number, name: string, text: string) => void;\r\n  fileDel: (folderId: number, fileId: number) => void;\r\n};\r\n\r\nconst Speak: FC<Props> = ({\r\n  classes,\r\n  folders,\r\n  files,\r\n  type,\r\n  loginAuth,\r\n  loginAction,\r\n  changeType,\r\n  changeSearch,\r\n  clickFolder,\r\n  clickPlay,\r\n  clickFile,\r\n  clickAll,\r\n  folderAdd,\r\n  folderDel,\r\n  fileAdd,\r\n  fileDel,\r\n}) => {\r\n  const theme = createMuiTheme({\r\n    palette: {\r\n      type: type === \"dark\" ? \"dark\" : \"light\",\r\n      background: {\r\n        default: \"#000fff\",\r\n      },\r\n    },\r\n    typography: {\r\n      button: {\r\n        textTransform: \"none\",\r\n      },\r\n      fontSize: 11,\r\n      fontFamily: [\r\n        \"Montserrat\",\r\n        \"游ゴシック\",\r\n        \"YuGothic\",\r\n        \"ヒラギノ角ゴ ProN W3\",\r\n        \"Hiragino Kaku Gothic ProN\",\r\n        \"メイリオ\",\r\n        \"Meiryo\",\r\n        \"sans - serif\",\r\n      ].join(\",\"),\r\n    },\r\n    mixins: {\r\n      toolbar: {\r\n        minHeight: 56,\r\n      },\r\n    },\r\n    props: {\r\n      MuiList: {\r\n        dense: true,\r\n      },\r\n    },\r\n  });\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <ThemeProvider theme={theme}>\r\n        <MuiThemeProvider theme={theme}>\r\n          <div\r\n            style={\r\n              type === \"dark\"\r\n                ? { backgroundColor: \"#424242\" }\r\n                : { backgroundColor: \"#fff\" }\r\n            }\r\n          >\r\n            {loginAuth ? (\r\n              <React.Fragment>\r\n                <Header\r\n                  type={type}\r\n                  loginAction={loginAction}\r\n                  changeSearch={changeSearch}\r\n                  changeType={changeType}\r\n                  folders={folders}\r\n                  clickFolder={clickFolder}\r\n                  folderAdd={folderAdd}\r\n                  folderDel={folderDel}\r\n                />\r\n                <div className={classes.flex}>\r\n                  <Paper className={classes.body}>\r\n                    <Body\r\n                      folders={folders}\r\n                      files={files}\r\n                      clickPlay={clickPlay}\r\n                      clickFile={clickFile}\r\n                      clickAll={clickAll}\r\n                      fileAdd={fileAdd}\r\n                      fileDel={fileDel}\r\n                    />\r\n                  </Paper>\r\n                </div>\r\n              </React.Fragment>\r\n            ) : (\r\n              <Paper className={classes.login}>\r\n                <Login loginAction={loginAction} loginAuth={loginAuth} />\r\n              </Paper>\r\n            )}\r\n          </div>\r\n        </MuiThemeProvider>\r\n      </ThemeProvider>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default withStyles(styles)(Speak);\r\n","import { Dispatch } from \"redux\";\r\nimport { connect } from \"react-redux\";\r\nimport { AppState } from \"../../state/store\";\r\nimport { operations } from \"../../state/speak\";\r\nimport Component from \"../pages/Speak\";\r\n\r\nconst mapStateToProps = (state: AppState) => ({\r\n  folders: [...state.speak.folders],\r\n  files: [...state.speak.files],\r\n  type: state.speak.type,\r\n  loginAuth: state.speak.loginAuth,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch: Dispatch) => {\r\n  return {\r\n    loginAction(id: string, pw: string) {\r\n      dispatch(operations.loginAction(id, pw));\r\n    },\r\n    changeType(changeType: string) {\r\n      dispatch(operations.changeType(changeType));\r\n    },\r\n    changeSearch(text: string) {\r\n      dispatch(operations.changeSearch(text));\r\n    },\r\n    clickFolder(id: string, opened: boolean) {\r\n      dispatch(operations.clickFolder(id, opened));\r\n    },\r\n    clickPlay(folderId: number, fileId: number, playBefore: boolean) {\r\n      dispatch(operations.clickPlay(folderId, fileId, playBefore));\r\n    },\r\n    clickFile(folderId: number, fileId: number, checked: boolean) {\r\n      dispatch(operations.clickFile(folderId, fileId, checked));\r\n    },\r\n    clickAll(checked: boolean) {\r\n      dispatch(operations.clickAll(checked));\r\n    },\r\n    folderAdd(name: string, category: string) {\r\n      dispatch(operations.folderAdd(name, category));\r\n    },\r\n    folderDel(folderId: number) {\r\n      dispatch(operations.folderDel(folderId));\r\n    },\r\n    fileAdd(folderId: number, name: string, text: string) {\r\n      dispatch(operations.fileAdd(folderId, name, text));\r\n    },\r\n    fileDel(folderId: number, fileId: number) {\r\n      dispatch(operations.fileDel(folderId, fileId));\r\n    },\r\n    musicStart() {\r\n      dispatch(operations.musicStart());\r\n    },\r\n    musicStop() {\r\n      dispatch(operations.musicStop());\r\n    },\r\n    musicEnd() {\r\n      dispatch(operations.musicEnd());\r\n    },\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Component);\r\n","import React, { FC } from \"react\";\nimport \"./App.css\";\n// import { Fold } from \"speak\";\nimport SpeakContainer from \"./containers/SpeakContainer\";\nimport { withStyles, StyleRules } from \"@material-ui/core/styles\";\n\nconst styles = (): StyleRules => ({});\n\nconst App: FC = () => {\n  return (\n    <React.Fragment>\n      <SpeakContainer />\n    </React.Fragment>\n  );\n};\n\nexport default withStyles(styles)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import {\r\n  createStore as reduxCreateStore,\r\n  combineReducers,\r\n  compose,\r\n  Reducer,\r\n} from \"redux\";\r\nimport speakReducer, { SpeakState } from \"./speak/reducers\";\r\nimport persistState from \"redux-localstorage\";\r\n\r\nexport type AppState = {\r\n  speak: SpeakState;\r\n};\r\n\r\nconst reducer: Reducer = combineReducers({\r\n  speak: speakReducer,\r\n});\r\n\r\nconst store: any = compose(persistState())(reduxCreateStore)(reducer);\r\n\r\nexport default store;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./views/App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { Provider } from \"react-redux\";\nimport store from \"./state/store\";\n\n// const store = configureStore();\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}