{"version":3,"sources":["state/speak/actions.tsx","state/speak/reducers.tsx","state/speak/operations.tsx","views/components/Login.tsx","views/components/Header.tsx","views/components/SideBar.tsx","views/components/voice.js","views/components/Body.tsx","views/pages/Speak.tsx","views/containers/SpeakContainer.ts","views/App.tsx","serviceWorker.ts","state/store.tsx","index.tsx"],"names":["ActionTypes","actions","loginAction","id","pw","type","payload","changeType","changeSearch","text","clickFolder","opened","clickPlay","folderId","fileId","playBefore","clickFile","checked","clickAll","folderAdd","name","category","folderDel","fileAdd","fileDel","musicStart","musicStop","musicEnd","initialState","folders","count","files","listening","indicate","loginAuth","speakReducer","state","action","filter","file","includes","forEach","folder","target","targetFolders","fold","targetFoldId","map","newFolders","length","alert","targetFiles","newFiles","withStyles","theme","root","width","height","inputZone","paddingTop","textAlign","margin","border","borderRadius","boxShadow","media","classes","React","useState","mail","setMail","password","setPassword","Fragment","Paper","className","Grow","in","timeout","disableStrictModeCompat","Typography","variant","component","FormControl","TextField","label","style","marginTop","value","onChange","event","Button","color","onClick","Link","href","fontSize","maxWidth","backgroundColor","palette","background","paper","flexGrow","nested","paddingLeft","spacing","menuButton","marginRight","title","display","breakpoints","up","search","position","shape","fade","common","white","marginLeft","searchIcon","padding","pointerEvents","alignItems","justifyContent","inputRoot","inputInput","transition","transitions","create","isType","setType","anchorEl","setAnchorEl","AppBar","Toolbar","IconButton","edge","aria-label","currentTarget","keepMounted","open","Boolean","onClose","MenuItem","window","confirm","noWrap","Switch","defaultChecked","inputProps","Fab","size","document","location","InputBase","placeholder","input","getFolderIcon","formControl","minWidth","openBox","setOpenBox","openModal","setOpenModal","folderName","setFolderName","folderCategory","setFolderCategory","useEffect","InputLabel","htmlFor","Input","Select","labelId","float","marginBottom","List","aria-labelledby","ListItem","button","ListItemText","primary","Collapse","unmountOnExit","disablePadding","index","key","overflow","execute","a","options","SpeechSynthesisUtterance","lang","rate","pitch","speechSynthesis","speak","paddingRight","textOverflow","iconButtonGroup","iconButton","allCheck","setAllCheck","inputName","setInputName","inputText","setInputText","inputCategory","setInputCategory","targetFoldersId","indexOf","handlerSpeak","Checkbox","tabIndex","check","autoComplete","endIcon","String","role","undefined","dense","divider","disableRipple","fadeIn","flex","login","sidebar","minHeight","body","foot","createMuiTheme","default","typography","textTransform","fontFamily","join","mixins","toolbar","props","MuiList","ThemeProvider","connect","dispatch","operations","Component","SpeakContainer","hostname","match","reducer","combineReducers","store","compose","persistState","reduxCreateStore","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.666d950c.chunk.js","sourcesContent":["import { ActionType } from \"redux-actions-type\";\r\n\r\nexport const ActionTypes = {\r\n  LOGIN_ACTION: \"speak/LOGIN_ACTION\",\r\n  CHANGE_TYPE: \"speak/CHANGE_TYPE\",\r\n  CHANGE_SEARCH: \"speak/CHANGE_SEARCH\",\r\n\r\n  CLICK_FOLDER: \"speak/CLICK_FOLDER\",\r\n  CLICK_PLAY: \"speak/CLICK_PLAY\",\r\n  CLICK_FILE: \"speak/CLICK_FILE\",\r\n  CLICK_ALL: \"speak/CLICK_ALL\",\r\n\r\n  FOLDER_ADD: \"speak/FOLDER_ADD\",\r\n  FOLDER_DEL: \"speak/FOLDER_DEL\",\r\n\r\n  FILE_ADD: \"speak/FILE_ADD\",\r\n  FILE_DEL: \"speak/FILE_DEL\",\r\n\r\n  MUSIC_START: \"speak/MUSIC_START\",\r\n  MUSIC_STOP: \"speak/MUSIC_STOP\",\r\n  MUSIC_END: \"speak/MUSIC_END\",\r\n} as const;\r\n\r\nconst actions = {\r\n  loginAction(id: string, pw: string) {\r\n    return {\r\n      type: ActionTypes.LOGIN_ACTION,\r\n      payload: { id, pw },\r\n    };\r\n  },\r\n  changeType(type: string) {\r\n    return {\r\n      type: ActionTypes.CHANGE_TYPE,\r\n      payload: { type },\r\n    };\r\n  },\r\n  changeSearch(text: string) {\r\n    return {\r\n      type: ActionTypes.CHANGE_SEARCH,\r\n      payload: { text },\r\n    };\r\n  },\r\n  clickFolder(id: string, opened: boolean) {\r\n    return {\r\n      type: ActionTypes.CLICK_FOLDER,\r\n      payload: { id, opened },\r\n    };\r\n  },\r\n  clickPlay(folderId: number, fileId: number, playBefore: boolean) {\r\n    return {\r\n      type: ActionTypes.CLICK_PLAY,\r\n      payload: { folderId, fileId, playBefore },\r\n    };\r\n  },\r\n  clickFile(folderId: number, fileId: number, checked: boolean) {\r\n    return {\r\n      type: ActionTypes.CLICK_FILE,\r\n      payload: { folderId, fileId, checked },\r\n    };\r\n  },\r\n  clickAll(checked: boolean) {\r\n    return {\r\n      type: ActionTypes.CLICK_ALL,\r\n      payload: { checked },\r\n    };\r\n  },\r\n  folderAdd(name: string, category: string) {\r\n    return {\r\n      type: ActionTypes.FOLDER_ADD,\r\n      payload: { name, category },\r\n    };\r\n  },\r\n  folderDel() {\r\n    return {\r\n      type: ActionTypes.FOLDER_DEL,\r\n    };\r\n  },\r\n  fileAdd(folderId: number, name: string, text: string) {\r\n    return {\r\n      type: ActionTypes.FILE_ADD,\r\n      payload: { folderId, name, text },\r\n    };\r\n  },\r\n  fileDel(folderId: number, fileId: number) {\r\n    return {\r\n      type: ActionTypes.FILE_DEL,\r\n      payload: { folderId, fileId },\r\n    };\r\n  },\r\n  musicStart() {\r\n    return {\r\n      type: ActionTypes.MUSIC_START,\r\n    };\r\n  },\r\n  musicStop() {\r\n    return {\r\n      type: ActionTypes.MUSIC_STOP,\r\n    };\r\n  },\r\n  musicEnd() {\r\n    return {\r\n      type: ActionTypes.MUSIC_END,\r\n    };\r\n  },\r\n};\r\n\r\nexport type Actions = ActionType<typeof actions>;\r\nexport default actions;\r\n","import { Reducer } from \"redux\";\r\nimport { Fold, File } from \"speak\";\r\nimport { Actions, ActionTypes } from \"./actions\";\r\n\r\nexport type SpeakState = {\r\n  folders: Fold[];\r\n  files: File[];\r\n  type: string;\r\n  loginAuth: boolean;\r\n};\r\n\r\nexport const initialState: SpeakState = {\r\n  folders: [\r\n    {\r\n      folderId: 1,\r\n      name: \"果物\",\r\n      opened: true,\r\n      count: 0,\r\n      category: \"secondary\",\r\n    },\r\n    {\r\n      folderId: 2,\r\n      name: \"こってり系\",\r\n      opened: true,\r\n      count: 0,\r\n      category: \"action\",\r\n    },\r\n    {\r\n      folderId: 3,\r\n      name: \"飲み物\",\r\n      opened: false,\r\n      count: 0,\r\n      category: \"disabled\",\r\n    },\r\n    {\r\n      folderId: 4,\r\n      name: \"パスタ\",\r\n      opened: false,\r\n      count: 0,\r\n      category: \"primary\",\r\n    },\r\n    {\r\n      folderId: 5,\r\n      name: \"ラーメン\",\r\n      opened: false,\r\n      count: 0,\r\n      category: \"secondary\",\r\n    },\r\n    {\r\n      folderId: 6,\r\n      name: \"国名\",\r\n      opened: false,\r\n      count: 0,\r\n      category: \"error\",\r\n    },\r\n  ],\r\n  files: [\r\n    {\r\n      folderId: 1,\r\n      fileId: 1,\r\n      name: \"りんご\",\r\n      text: \"apple\",\r\n      checked: false,\r\n      listening: false,\r\n      indicate: true,\r\n    },\r\n    {\r\n      folderId: 1,\r\n      fileId: 2,\r\n      name: \"ぶどう\",\r\n      text: \"grape\",\r\n      checked: false,\r\n      listening: false,\r\n      indicate: true,\r\n    },\r\n    {\r\n      folderId: 1,\r\n      fileId: 3,\r\n      name: \"シャンパン\",\r\n      text: \"Champagne\",\r\n      checked: false,\r\n      listening: false,\r\n      indicate: true,\r\n    },\r\n    {\r\n      folderId: 1,\r\n      fileId: 4,\r\n      name: \"しょうゆ\",\r\n      text: \"Soy sauce\",\r\n      checked: false,\r\n      listening: false,\r\n      indicate: true,\r\n    },\r\n    {\r\n      folderId: 2,\r\n      fileId: 1,\r\n      name: \"塩\",\r\n      text: \"salt\",\r\n      checked: false,\r\n      listening: false,\r\n      indicate: true,\r\n    },\r\n    {\r\n      folderId: 2,\r\n      fileId: 2,\r\n      name: \"豚骨\",\r\n      text: \"pork bone\",\r\n      checked: false,\r\n      listening: false,\r\n      indicate: true,\r\n    },\r\n    {\r\n      folderId: 2,\r\n      fileId: 3,\r\n      name: \"鶏\",\r\n      text: \"chicken\",\r\n      checked: false,\r\n      listening: false,\r\n      indicate: true,\r\n    },\r\n    {\r\n      folderId: 3,\r\n      fileId: 1,\r\n      name: \"酸辣湯麺\",\r\n      text: \"hot and sour noodles\",\r\n      checked: false,\r\n      listening: false,\r\n      indicate: true,\r\n    },\r\n    {\r\n      folderId: 3,\r\n      fileId: 2,\r\n      name: \"トンカツ\",\r\n      text: \"pork cutlet\",\r\n      checked: false,\r\n      listening: false,\r\n      indicate: true,\r\n    },\r\n    {\r\n      folderId: 3,\r\n      fileId: 3,\r\n      name: \"ラーメン\",\r\n      text: \"ramen\",\r\n      checked: false,\r\n      listening: false,\r\n      indicate: true,\r\n    },\r\n    {\r\n      folderId: 3,\r\n      fileId: 4,\r\n      name: \"日本酒\",\r\n      text: \"Japanese sake\",\r\n      checked: false,\r\n      listening: false,\r\n      indicate: true,\r\n    },\r\n    {\r\n      folderId: 3,\r\n      fileId: 5,\r\n      name: \"ワイン\",\r\n      text: \"Wine\",\r\n      checked: false,\r\n      listening: false,\r\n      indicate: true,\r\n    },\r\n  ],\r\n  type: \"light\",\r\n  loginAuth: false,\r\n};\r\n\r\nconst speakReducer: Reducer<SpeakState, Actions> = (\r\n  state = initialState,\r\n  action\r\n) => {\r\n  switch (action.type) {\r\n    case ActionTypes.LOGIN_ACTION: {\r\n      if (action.payload.id && action.payload.pw) {\r\n        state.loginAuth = true;\r\n      } else {\r\n        state.loginAuth = false;\r\n      }\r\n      return {\r\n        ...state,\r\n      };\r\n    }\r\n    case ActionTypes.CHANGE_TYPE: {\r\n      state.type = action.payload.type;\r\n      return {\r\n        ...state,\r\n      };\r\n    }\r\n    case ActionTypes.CHANGE_SEARCH: {\r\n      if (action.payload.text) {\r\n        state.files\r\n          .filter((file) => file.text.includes(action.payload.text))\r\n          .forEach((file) => {\r\n            file.indicate = false;\r\n          });\r\n      } else {\r\n        state.files.forEach((file) => {\r\n          file.indicate = true;\r\n        });\r\n      }\r\n      return {\r\n        ...state,\r\n      };\r\n    }\r\n    case ActionTypes.CLICK_FOLDER: {\r\n      state.folders.forEach((folder) => {\r\n        if (folder.folderId === action.payload.id) {\r\n          folder.opened = !folder.opened;\r\n        }\r\n      });\r\n      return {\r\n        ...state,\r\n      };\r\n    }\r\n    case ActionTypes.CLICK_PLAY: {\r\n      const folderId = action.payload.folderId;\r\n      const fileId = action.payload.folderId;\r\n      const playBefore = action.payload.playBefore;\r\n      if (folderId && fileId) {\r\n        // 単独\r\n        state.files\r\n          .filter(\r\n            (file) => file.folderId === folderId && file.fileId === fileId\r\n          )\r\n          .forEach((file) => {\r\n            file.listening = playBefore;\r\n          });\r\n      }\r\n      return {\r\n        ...state,\r\n      };\r\n    }\r\n    case ActionTypes.CLICK_FILE: {\r\n      // チェック対象ファイル\r\n      const target = state.files.filter(\r\n        (file) =>\r\n          file.folderId === action.payload.folderId &&\r\n          file.fileId === action.payload.fileId\r\n      );\r\n      target[0].checked = !action.payload.checked;\r\n      return {\r\n        ...state,\r\n      };\r\n    }\r\n    case ActionTypes.CLICK_ALL: {\r\n      // チェック対象フォルダ\r\n      const targetFolders = state.folders.filter(\r\n        (fold) => fold.opened === true\r\n      );\r\n      // チェック対象ファイル\r\n      const targetFoldId = [\r\n        targetFolders.map((fold) => {\r\n          return fold.folderId;\r\n        }),\r\n      ];\r\n      state.files.forEach((file) => {\r\n        if (targetFoldId[0].includes(file.folderId)) {\r\n          file.checked = action.payload.checked;\r\n        }\r\n      });\r\n\r\n      return {\r\n        ...state,\r\n      };\r\n    }\r\n    case ActionTypes.FOLDER_ADD: {\r\n      const newFolders: Fold = {\r\n        folderId: state.folders.length + 1,\r\n        name: action.payload.name,\r\n        opened: false,\r\n        count: 0,\r\n        category: action.payload.category,\r\n      };\r\n      return {\r\n        ...state,\r\n        folders: [...state.folders, newFolders],\r\n      };\r\n    }\r\n\r\n    case ActionTypes.FOLDER_DEL: {\r\n      alert(\"folder.del\");\r\n      return {\r\n        ...state,\r\n      };\r\n    }\r\n\r\n    case ActionTypes.FILE_ADD: {\r\n      const targetFiles = state.files.filter(\r\n        (file) => file.folderId === action.payload.folderId\r\n      );\r\n      const newFiles: File = {\r\n        folderId: action.payload.folderId,\r\n        fileId: targetFiles.length + 1,\r\n        name: action.payload.name,\r\n        text: action.payload.text,\r\n        checked: false,\r\n        listening: false,\r\n        indicate: true,\r\n      };\r\n      return {\r\n        ...state,\r\n        files: [...state.files, newFiles],\r\n      };\r\n    }\r\n\r\n    case ActionTypes.FILE_DEL: {\r\n      state.files = state.files.filter(\r\n        (file) =>\r\n          !(\r\n            file.folderId === action.payload.folderId &&\r\n            file.fileId === action.payload.fileId\r\n          )\r\n      );\r\n      return {\r\n        ...state,\r\n      };\r\n    }\r\n\r\n    case ActionTypes.MUSIC_START: {\r\n      alert(\"music.start\");\r\n      return {\r\n        ...state,\r\n      };\r\n    }\r\n    case ActionTypes.MUSIC_STOP: {\r\n      alert(\"music.stop\");\r\n      return {\r\n        ...state,\r\n      };\r\n    }\r\n    case ActionTypes.MUSIC_END: {\r\n      alert(\"music.end\");\r\n      return {\r\n        ...state,\r\n      };\r\n    }\r\n\r\n    default: {\r\n      return state;\r\n    }\r\n  }\r\n};\r\n\r\nexport default speakReducer;\r\n","import actions from \"./actions\";\r\n\r\nexport default {\r\n  loginAction: actions.loginAction,\r\n  changeType: actions.changeType,\r\n  changeSearch: actions.changeSearch,\r\n  clickFolder: actions.clickFolder,\r\n  clickPlay: actions.clickPlay,\r\n  clickFile: actions.clickFile,\r\n  clickAll: actions.clickAll,\r\n  folderAdd: actions.folderAdd,\r\n  folderDel: actions.folderDel,\r\n  fileAdd: actions.fileAdd,\r\n  fileDel: actions.fileDel,\r\n  musicStart: actions.musicStart,\r\n  musicStop: actions.musicStop,\r\n  musicEnd: actions.musicEnd,\r\n};\r\n","import React, { FC } from \"react\";\r\nimport {\r\n  withStyles,\r\n  WithStyles,\r\n  StyleRules,\r\n  Theme,\r\n} from \"@material-ui/core/styles\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Link from \"@material-ui/core/Link\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Grow from \"@material-ui/core/Grow\";\r\n\r\nconst styles = (theme: Theme): StyleRules => ({\r\n  root: {\r\n    width: \"100%\",\r\n    height: \"100%\",\r\n  },\r\n  inputZone: {\r\n    width: \"60%\",\r\n    height: \"60%\",\r\n    paddingTop: \"60px\",\r\n    textAlign: \"center\",\r\n    margin: \"0 auto\",\r\n    border: \"2px solid #666666\",\r\n    borderRadius: \"12px\",\r\n    boxShadow: \"3px 3px 3px #666666\",\r\n  },\r\n  media: {\r\n    height: 140,\r\n  },\r\n});\r\n\r\ninterface OwnProps {\r\n  loginAuth: boolean;\r\n  loginAction: (id: string, pw: string) => void;\r\n}\r\n\r\ntype Props = WithStyles<typeof styles> & OwnProps;\r\n\r\nconst Login: FC<Props> = ({ classes, loginAuth, loginAction }) => {\r\n  const [mail, setMail] = React.useState(\"\");\r\n  const [password, setPassword] = React.useState(\"\");\r\n\r\n  const handleLogin = () => {\r\n    if ((mail === \"\" || password === \"\") && !loginAuth) {\r\n      alert(\"入力したメールアドレス、もしくはパスワードが間違っています。\");\r\n    } else {\r\n      loginAction(mail, password);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Paper className={classes.root}>\r\n        {/* <Paper elevation={3} className={classes.inputZone}> */}\r\n        <div className={classes.inputZone}>\r\n          <Grow\r\n            in={true}\r\n            // style={{ transformOrigin: \"50px 50px\" }}\r\n            {...{ timeout: 2000 }}\r\n            disableStrictModeCompat={true}\r\n          >\r\n            <Typography variant=\"h1\" component=\"h2\">\r\n              Learn Speak\r\n            </Typography>\r\n          </Grow>\r\n          <FormControl>\r\n            <TextField\r\n              id=\"mail-address\"\r\n              label=\"メールアドレス\"\r\n              type=\"mail-address\"\r\n              style={{ marginTop: \"12px\" }}\r\n              value={mail}\r\n              onChange={(event) => {\r\n                setMail(event.target.value);\r\n              }}\r\n            />\r\n            <TextField\r\n              id=\"password\"\r\n              label=\"パスワード\"\r\n              type=\"password\"\r\n              style={{ marginTop: \"12px\" }}\r\n              value={password}\r\n              onChange={(event) => {\r\n                setPassword(event.target.value);\r\n              }}\r\n            />\r\n            <Button\r\n              variant=\"contained\"\r\n              color=\"secondary\"\r\n              style={{ marginTop: \"24px\" }}\r\n              onClick={handleLogin}\r\n            >\r\n              ログイン\r\n            </Button>\r\n            <Link\r\n              href=\"#\"\r\n              onClick={() => {\r\n                alert(\"ヒント：両方に入力してみよう！\");\r\n              }}\r\n              style={{ fontSize: \"14px\", marginTop: \"8px\" }}\r\n            >\r\n              ログインに困った場合\r\n            </Link>\r\n          </FormControl>\r\n        </div>\r\n        {/* </Paper> */}\r\n      </Paper>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default withStyles(styles)(Login);\r\n","import React, { FC } from \"react\";\r\nimport {\r\n  // makeStyles,\r\n  // createStyles,\r\n  fade,\r\n  withStyles,\r\n  WithStyles,\r\n  StyleRules,\r\n  Theme,\r\n} from \"@material-ui/core/styles\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport InputBase from \"@material-ui/core/InputBase\";\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\nimport Fab from \"@material-ui/core/Fab\";\r\nimport TwitterIcon from \"@material-ui/icons/Twitter\";\r\nimport InstagramIcon from \"@material-ui/icons/Instagram\";\r\nimport GitHubIcon from \"@material-ui/icons/GitHub\";\r\nimport ExitToApp from \"@material-ui/icons/ExitToApp\";\r\nimport Switch from \"@material-ui/core/Switch\";\r\nimport Menu from \"@material-ui/core/Menu\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\n\r\nconst styles = (theme: Theme): StyleRules => ({\r\n  root: {\r\n    width: \"100%\",\r\n    maxWidth: 360,\r\n    backgroundColor: theme.palette.background.paper,\r\n    flexGrow: 1,\r\n  },\r\n  nested: {\r\n    paddingLeft: theme.spacing(4),\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n    display: \"none\",\r\n    textAlign: \"left\",\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      display: \"block\",\r\n    },\r\n  },\r\n  search: {\r\n    position: \"relative\",\r\n    borderRadius: theme.shape.borderRadius,\r\n    backgroundColor: fade(theme.palette.common.white, 0.15),\r\n    \"&:hover\": {\r\n      backgroundColor: fade(theme.palette.common.white, 0.25),\r\n    },\r\n    marginLeft: 0,\r\n    width: \"50%\",\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      marginLeft: theme.spacing(1),\r\n      width: \"auto\",\r\n    },\r\n  },\r\n  searchIcon: {\r\n    padding: theme.spacing(0, 2),\r\n    height: \"100%\",\r\n    position: \"absolute\",\r\n    pointerEvents: \"none\",\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n  },\r\n  inputRoot: {\r\n    color: \"inherit\",\r\n  },\r\n  inputInput: {\r\n    padding: theme.spacing(1, 1, 1, 0),\r\n    // vertical padding + font size from searchIcon\r\n    paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\r\n    transition: theme.transitions.create(\"width\"),\r\n    width: \"100%\",\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      width: \"12ch\",\r\n      \"&:focus\": {\r\n        width: \"20ch\",\r\n      },\r\n    },\r\n  },\r\n});\r\n\r\ninterface OwnProps {\r\n  type: string;\r\n  loginAction: (id: string, pw: string) => void;\r\n  changeSearch: (text: string) => void;\r\n  changeType: (type: string) => void;\r\n}\r\n\r\ntype Props = WithStyles<typeof styles> & OwnProps;\r\n\r\nconst Header: FC<Props> = ({\r\n  classes,\r\n  type,\r\n  loginAction,\r\n  changeSearch,\r\n  changeType,\r\n}) => {\r\n  const [isType, setType] = React.useState(type === \"dark\");\r\n  const [anchorEl, setAnchorEl] = React.useState<null | HTMLElement>(null);\r\n\r\n  const handleLogout = () => {\r\n    if (window.confirm(\"ログアウトします。\\nよろしいでしょうか？\")) {\r\n      loginAction(\"\", \"\");\r\n    }\r\n  };\r\n\r\n  const handleClick = (event: React.MouseEvent<HTMLButtonElement>) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  const handleType = () => {\r\n    setType(!isType);\r\n    changeType(isType ? \"light\" : \"dark\");\r\n  };\r\n\r\n  return (\r\n    <AppBar position=\"static\">\r\n      <Toolbar>\r\n        <IconButton\r\n          edge=\"start\"\r\n          className={classes.menuButton}\r\n          color=\"inherit\"\r\n          aria-label=\"open drawer\"\r\n          onClick={handleClick}\r\n        >\r\n          <MenuIcon />\r\n        </IconButton>\r\n        <Menu\r\n          id=\"simple-menu\"\r\n          anchorEl={anchorEl}\r\n          keepMounted\r\n          open={Boolean(anchorEl)}\r\n          onClose={handleClose}\r\n        >\r\n          <MenuItem onClick={handleLogout}>\r\n            ログアウト\r\n            <ExitToApp />\r\n          </MenuItem>\r\n        </Menu>\r\n        <Typography className={classes.title} variant=\"h6\" noWrap>\r\n          Learn Speak\r\n        </Typography>\r\n        <Switch\r\n          defaultChecked\r\n          color=\"default\"\r\n          inputProps={{ \"aria-label\": \"checkbox with default color\" }}\r\n          checked={isType}\r\n          onChange={handleType}\r\n        />\r\n        <Fab\r\n          color=\"primary\"\r\n          aria-label=\"Open Twitter\"\r\n          size=\"small\"\r\n          style={{ marginRight: \"4px\" }}\r\n          onClick={() => {\r\n            if (\r\n              window.confirm(\r\n                \"開発者のTwitterを開きます。\\nよろしいでしょうか？\"\r\n              )\r\n            ) {\r\n              document.location.href = \"https://twitter.com/nakapooooon\";\r\n            }\r\n          }}\r\n        >\r\n          <TwitterIcon color=\"action\" style={{ color: \"#CCCCCC\" }} />\r\n        </Fab>\r\n        <Fab\r\n          color=\"primary\"\r\n          aria-label=\"Open Instagram\"\r\n          size=\"small\"\r\n          style={{ marginRight: \"4px\" }}\r\n          onClick={() => {\r\n            if (\r\n              window.confirm(\r\n                \"開発者のInstagramを開きます。\\nよろしいでしょうか？\"\r\n              )\r\n            ) {\r\n              document.location.href =\r\n                \"https://www.instagram.com/nakapooooon/?hl=ja\";\r\n            }\r\n          }}\r\n        >\r\n          <InstagramIcon color=\"action\" style={{ color: \"#CCCCCC\" }} />\r\n        </Fab>\r\n        <Fab\r\n          color=\"primary\"\r\n          aria-label=\"Open GitHub\"\r\n          size=\"small\"\r\n          onClick={() => {\r\n            if (\r\n              window.confirm(\r\n                \"GitHubの開発リポジトリへ遷移します。\\nよろしいでしょうか？\"\r\n              )\r\n            ) {\r\n              document.location.href =\r\n                \"https://github.com/nakapon9517/learn-speak\";\r\n            }\r\n          }}\r\n        >\r\n          <GitHubIcon color=\"action\" style={{ color: \"#CCCCCC\" }} />\r\n        </Fab>\r\n        <div className={classes.search}>\r\n          <div className={classes.searchIcon}>\r\n            <SearchIcon />\r\n          </div>\r\n          <InputBase\r\n            placeholder=\"Search…\"\r\n            classes={{\r\n              root: classes.inputRoot,\r\n              input: classes.inputInput,\r\n            }}\r\n            inputProps={{ \"aria-label\": \"search\" }}\r\n            onChange={(event) => {\r\n              changeSearch(event.target.value);\r\n              // console.log();\r\n            }}\r\n          />\r\n        </div>\r\n        {/* <Badge\r\n          overlap=\"circle\"\r\n          anchorOrigin={{\r\n            vertical: \"bottom\",\r\n            horizontal: \"right\",\r\n          }}\r\n          style={{ marginLeft: \"8px\" }}\r\n          badgeContent={<KeyboardArrowDown />}\r\n        >\r\n          <Avatar\r\n            alt=\"created by nakapon\"\r\n            src=\"./web-designer.jpg\"\r\n            variant=\"circle\"\r\n          />\r\n        </Badge> */}\r\n      </Toolbar>\r\n    </AppBar>\r\n  );\r\n};\r\n\r\nexport default withStyles(styles)(Header);\r\n","import React, { FC, useEffect } from \"react\";\r\nimport { Fold } from \"speak\";\r\nimport {\r\n  withStyles,\r\n  WithStyles,\r\n  StyleRules,\r\n  Theme,\r\n} from \"@material-ui/core/styles\";\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport Collapse from \"@material-ui/core/Collapse\";\r\nimport InboxIcon from \"@material-ui/icons/MoveToInbox\";\r\nimport ExpandLess from \"@material-ui/icons/ExpandLess\";\r\nimport ExpandMore from \"@material-ui/icons/ExpandMore\";\r\nimport Folder from \"@material-ui/icons/Folder\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport Input from \"@material-ui/core/Input\";\r\nimport Fab from \"@material-ui/core/Fab\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport Check from \"@material-ui/icons/Check\";\r\n\r\nconst styles = (theme: Theme): StyleRules => ({\r\n  root: {\r\n    maxWidth: 360,\r\n    backgroundColor: theme.palette.background.paper,\r\n    display: \"block\",\r\n  },\r\n  formControl: {\r\n    margin: theme.spacing(1),\r\n    minWidth: 300,\r\n    display: \"inline-block\",\r\n  },\r\n});\r\n\r\ninterface OwnProps {\r\n  folders: Fold[];\r\n  clickFolder: (id: string, opened: boolean) => void;\r\n  folderAdd: (name: string, category: string) => void;\r\n}\r\n\r\ntype Props = WithStyles<typeof styles> & OwnProps;\r\n\r\nconst SideBar: FC<Props> = ({ classes, folders, clickFolder, folderAdd }) => {\r\n  const [openBox, setOpenBox] = React.useState(true);\r\n  const [openModal, setOpenModal] = React.useState(false);\r\n  const [folderName, setFolderName] = React.useState(\"\");\r\n  const [folderCategory, setFolderCategory] = React.useState(\"action\");\r\n\r\n  useEffect(() => {\r\n    setOpenModal(openModal);\r\n  }, [openModal]);\r\n\r\n  const handleFolderAdd = (name: string, category: string) => {\r\n    if (!name || name === \"\") {\r\n      alert(\"フォルダ名を入力してください。\");\r\n    } else {\r\n      folderAdd(name, category);\r\n      setFolderName(\"\");\r\n      setFolderCategory(\"\");\r\n      alert(\"登録しました。\");\r\n    }\r\n  };\r\n\r\n  const handleFolderNameChange = (\r\n    event: React.ChangeEvent<{ value: unknown }>\r\n  ) => {\r\n    setFolderCategory(event.target.value as string);\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <FormControl\r\n        style={{\r\n          width: \"100%\",\r\n          marginLeft: \"16px\",\r\n          display: \"inline-block\",\r\n        }}\r\n      >\r\n        <FormControl\r\n          style={{\r\n            width: \"60%\",\r\n            display: \"inline-block\",\r\n          }}\r\n        >\r\n          <InputLabel htmlFor=\"input-folder\">Add Sound Box</InputLabel>\r\n          <Input\r\n            id=\"input-folder\"\r\n            style={{ width: \"100%\" }}\r\n            value={folderName}\r\n            onChange={(event) => {\r\n              setFolderName(event.target.value);\r\n            }}\r\n          />\r\n        </FormControl>\r\n        <FormControl\r\n          style={{\r\n            width: \"16%\",\r\n            display: \"inline-block\",\r\n            marginLeft: \"12px\",\r\n            marginTop: \"18px\",\r\n          }}\r\n        >\r\n          <Select\r\n            id=\"demo-simple-select\"\r\n            labelId=\"demo-simple-select-label\"\r\n            style={{\r\n              width: \"100%\",\r\n              height: \"30px\",\r\n            }}\r\n            value={folderCategory}\r\n            onChange={handleFolderNameChange}\r\n          >\r\n            <MenuItem value=\"action\">\r\n              <Folder color=\"action\" />\r\n            </MenuItem>\r\n            <MenuItem value=\"disabled\">\r\n              <Folder color=\"disabled\" />\r\n            </MenuItem>\r\n            <MenuItem value=\"primary\">\r\n              <Folder color=\"primary\" />\r\n            </MenuItem>\r\n            <MenuItem value=\"secondary\">\r\n              <Folder color=\"secondary\" />\r\n            </MenuItem>\r\n            <MenuItem value=\"error\">\r\n              <Folder color=\"error\" />\r\n            </MenuItem>\r\n          </Select>\r\n        </FormControl>\r\n        <span\r\n          style={{\r\n            float: \"right\",\r\n            marginRight: \"28px\",\r\n            marginTop: \"12px\",\r\n            marginBottom: \"4px\",\r\n          }}\r\n        >\r\n          <Fab\r\n            color=\"default\"\r\n            aria-label=\"add\"\r\n            size=\"small\"\r\n            onClick={() => {\r\n              handleFolderAdd(folderName, folderCategory);\r\n            }}\r\n          >\r\n            <AddIcon />\r\n          </Fab>\r\n        </span>\r\n      </FormControl>\r\n      <List\r\n        component=\"nav\"\r\n        aria-labelledby=\"nested-list-subheader\"\r\n        className={classes.root}\r\n      >\r\n        <ListItem\r\n          style={{ width: \"80%\" }}\r\n          button\r\n          onClick={() => {\r\n            setOpenBox(!openBox);\r\n          }}\r\n        >\r\n          <span style={{ marginRight: \"12px\" }}>\r\n            <InboxIcon />\r\n          </span>\r\n          <ListItemText primary=\"Sound Box\" />\r\n          {openBox ? <ExpandLess /> : <ExpandMore />}\r\n        </ListItem>\r\n        <Collapse in={openBox} timeout=\"auto\" unmountOnExit>\r\n          <List component=\"div\" disablePadding style={{ marginLeft: \"20px\" }}>\r\n            {folders.map((folder, index) => (\r\n              <React.Fragment key={folder.folderId + folder.name}>\r\n                <ListItem\r\n                  style={{ width: \"90%\" }}\r\n                  button\r\n                  onClick={() => {\r\n                    clickFolder(folder.folderId, folder.opened);\r\n                  }}\r\n                >\r\n                  <span style={{ marginRight: \"12px\" }}>\r\n                    {getFolderIcon(folder.category)}\r\n                  </span>\r\n                  <ListItemText\r\n                    style={{ overflow: \"hidden\" }}\r\n                    primary={folder.name}\r\n                  ></ListItemText>\r\n                  {folder.opened ? <Check /> : \"\"}\r\n                </ListItem>\r\n              </React.Fragment>\r\n            ))}\r\n          </List>\r\n        </Collapse>\r\n      </List>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nconst getFolderIcon = (type: string) => {\r\n  switch (type) {\r\n    case \"action\":\r\n      return <Folder color=\"action\" />;\r\n    case \"disabled\":\r\n      return <Folder color=\"disabled\" />;\r\n    case \"primary\":\r\n      return <Folder color=\"primary\" />;\r\n    case \"secondary\":\r\n      return <Folder color=\"secondary\" />;\r\n    case \"error\":\r\n      return <Folder color=\"error\" />;\r\n    default:\r\n      return <Folder />;\r\n  }\r\n};\r\n\r\nexport default withStyles(styles)(SideBar);\r\n","export async function execute(text) {\r\n  if (\"SpeechSynthesisUtterance\" in window) {\r\n    // var voices = window.speechSynthesis.getVoices();\r\n\r\n    let options = new SpeechSynthesisUtterance(text);\r\n    options.lang = \"ja-JP\";\r\n    // options.voice = voices[7];\r\n    options.rate = 1.0;\r\n    options.pitch = 1.0;\r\n\r\n    await window.speechSynthesis.speak(options);\r\n    return true;\r\n  } else {\r\n    alert(\"Speech synthesis(音声合成) APIには未対応です.\");\r\n    return false;\r\n  }\r\n}\r\n","import React, { FC } from \"react\";\r\nimport { Fold, File } from \"speak\";\r\nimport {\r\n  withStyles,\r\n  WithStyles,\r\n  StyleRules,\r\n  Theme,\r\n} from \"@material-ui/core/styles\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport MusicNote from \"@material-ui/icons/MusicNote\";\r\n// import EditIcon from \"@material-ui/icons/Edit\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport PlayCircleOutline from \"@material-ui/icons/PlayCircleOutline\";\r\nimport Fab from \"@material-ui/core/Fab\";\r\nimport Folder from \"@material-ui/icons/Folder\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport Spinner from \"react-spinkit\";\r\nimport { execute } from \"./voice\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport Input from \"@material-ui/core/Input\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\n\r\nconst styles = (theme: Theme): StyleRules => ({\r\n  root: {\r\n    backgroundColor: theme.palette.background.paper,\r\n    display: \"block\",\r\n    paddingRight: \"10px\",\r\n  },\r\n  title: {\r\n    width: \"20%\",\r\n    overflow: \"hidden\",\r\n    textOverflow: \"ellipsis\",\r\n  },\r\n  text: {\r\n    width: \"40%\",\r\n    marginLeft: \"8px\",\r\n    overflow: \"hidden\",\r\n    textOverflow: \"ellipsis\",\r\n  },\r\n  iconButtonGroup: {\r\n    width: \"16%\",\r\n    textAlign: \"right\",\r\n    display: \"inline-block\",\r\n  },\r\n  iconButton: {\r\n    // width: \"25%\",\r\n    // height: \"25%\",\r\n  },\r\n});\r\n\r\ninterface OwnProps {\r\n  folders: Fold[];\r\n  files: File[];\r\n  clickPlay: (folderId: number, fileId: number, playBefore: boolean) => void;\r\n  clickFile: (folderId: number, fileId: number, checked: boolean) => void;\r\n  clickAll: (checked: boolean) => void;\r\n  fileAdd: (folderId: number, name: string, text: string) => void;\r\n  fileDel: (folderId: number, fileId: number) => void;\r\n}\r\n\r\ntype Props = WithStyles<typeof styles> & OwnProps;\r\n\r\nconst Body: FC<Props> = ({\r\n  classes,\r\n  folders,\r\n  files,\r\n  clickPlay,\r\n  clickFile,\r\n  clickAll,\r\n  fileAdd,\r\n  fileDel,\r\n}) => {\r\n  const [allCheck, setAllCheck] = React.useState(false);\r\n  const [inputName, setInputName] = React.useState(\"\");\r\n  const [inputText, setInputText] = React.useState(\"\");\r\n  const [inputCategory, setInputCategory] = React.useState(folders[0].folderId);\r\n\r\n  const targetFoldersId = folders\r\n    .filter((fold) => fold.opened)\r\n    .map((fold) => fold.folderId);\r\n  const targetFiles = files.filter(\r\n    (file) => targetFoldersId.indexOf(file.folderId) !== -1 && file.indicate\r\n  );\r\n\r\n  const handlerSpeak = (\r\n    folderId: number,\r\n    fileId: number,\r\n    name: string,\r\n    text: string\r\n  ) => {\r\n    if (folderId === 0 || fileId === 0) {\r\n      clickPlay(folderId, fileId, true);\r\n      const targetFoldId = [\r\n        folders\r\n          .filter((fold) => fold.opened === true)\r\n          .map((fold) => {\r\n            return fold.folderId;\r\n          }),\r\n      ];\r\n      const targetFiles = files.filter(\r\n        (file) => targetFoldId[0].includes(file.folderId) && file.checked\r\n      );\r\n      if (targetFiles.length > 0) {\r\n        targetFiles.forEach((file) => {\r\n          execute(file.name);\r\n          execute(file.text);\r\n        });\r\n      } else {\r\n        alert(\"1つ以上チェックしてください。\");\r\n      }\r\n    } else {\r\n      (async () => {\r\n        execute(name);\r\n        execute(text);\r\n      })();\r\n    }\r\n  };\r\n\r\n  const handleInputNameChange = (\r\n    event: React.ChangeEvent<{ value: unknown }>\r\n  ) => {\r\n    setInputName(event.target.value as string);\r\n  };\r\n  const handleInputTextChange = (\r\n    event: React.ChangeEvent<{ value: unknown }>\r\n  ) => {\r\n    setInputText(event.target.value as string);\r\n  };\r\n  const handleCategoryChange = (\r\n    event: React.ChangeEvent<{ value: unknown }>\r\n  ) => {\r\n    setInputCategory(event.target.value as number);\r\n  };\r\n\r\n  const handleFileAdd = () => {\r\n    if (!inputName || inputName === \"\") {\r\n      alert(\"Nameを入力してください。\");\r\n    } else if (!inputText || inputText === \"\") {\r\n      alert(\"Textを入力してください。\");\r\n    } else {\r\n      fileAdd(inputCategory, inputName, inputText);\r\n      setInputName(\"\");\r\n      setInputText(\"\");\r\n      setInputCategory(folders[0].folderId);\r\n      alert(\"登録しました。\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <FormControl\r\n        style={{\r\n          width: \"96%\",\r\n          marginLeft: \"16px\",\r\n          display: \"inline-block\",\r\n        }}\r\n      >\r\n        <FormControl\r\n          style={{\r\n            height: \"24px\",\r\n            marginTop: \"11px\",\r\n          }}\r\n        >\r\n          <Checkbox\r\n            edge=\"start\"\r\n            checked={allCheck}\r\n            tabIndex={-1}\r\n            onClick={() => {\r\n              const check = !allCheck;\r\n              setAllCheck(check);\r\n              clickAll(check);\r\n            }}\r\n          />\r\n        </FormControl>\r\n        {/* Name入力 */}\r\n        <FormControl\r\n          style={{\r\n            width: \"28%\",\r\n            display: \"inline-block\",\r\n          }}\r\n        >\r\n          <InputLabel>Name</InputLabel>\r\n          <Input\r\n            id=\"input-name\"\r\n            style={{ width: \"100%\" }}\r\n            value={inputName}\r\n            onChange={handleInputNameChange}\r\n            autoComplete={\"false\"}\r\n          ></Input>\r\n        </FormControl>\r\n        {/* Text入力 */}\r\n        <FormControl\r\n          style={{\r\n            width: \"34%\",\r\n            display: \"inline-block\",\r\n            marginLeft: \"12px\",\r\n          }}\r\n        >\r\n          <InputLabel>Text</InputLabel>\r\n          <Input\r\n            id=\"input-text\"\r\n            style={{ width: \"100%\" }}\r\n            value={inputText}\r\n            onChange={handleInputTextChange}\r\n            autoComplete={\"false\"}\r\n          ></Input>\r\n        </FormControl>\r\n        {/* フォルダ選択 */}\r\n        <FormControl\r\n          style={{\r\n            width: \"16%\",\r\n            display: \"inline-block\",\r\n            marginLeft: \"12px\",\r\n          }}\r\n        >\r\n          <Select\r\n            id=\"demo-simple-select\"\r\n            style={{\r\n              width: \"100%\",\r\n              height: \"30px\",\r\n              marginTop: \"18px\",\r\n            }}\r\n            value={inputCategory}\r\n            onChange={handleCategoryChange}\r\n          >\r\n            {folders.map((folder) => (\r\n              <MenuItem\r\n                value={folder.folderId}\r\n                key={folder.folderId + folder.name}\r\n              >\r\n                <ListItem\r\n                  style={{\r\n                    height: \"24px\",\r\n                    overflow: \"hidden\",\r\n                    fontSize: \"8px\",\r\n                  }}\r\n                >\r\n                  {getFolderIcon(folder.category)}\r\n                  {\"　\"}\r\n                  <ListItemText primary={folder.name}></ListItemText>\r\n                </ListItem>\r\n              </MenuItem>\r\n            ))}\r\n          </Select>\r\n        </FormControl>\r\n        <span\r\n          style={{\r\n            float: \"right\",\r\n            marginRight: \"4px\",\r\n            marginTop: \"8px\",\r\n          }}\r\n        >\r\n          <Fab\r\n            color=\"default\"\r\n            aria-label=\"add\"\r\n            size=\"small\"\r\n            style={{\r\n              marginLeft: \"4px\",\r\n              marginRight: \"8px\",\r\n              marginBottom: \"4px\",\r\n            }}\r\n            onClick={handleFileAdd}\r\n          >\r\n            <AddIcon />\r\n          </Fab>\r\n          <Button\r\n            variant=\"contained\"\r\n            color=\"secondary\"\r\n            size=\"small\"\r\n            endIcon={<PlayCircleOutline />}\r\n            onClick={() => {\r\n              handlerSpeak(0, 0, \"\", \"\");\r\n            }}\r\n          >\r\n            Play\r\n          </Button>\r\n        </span>\r\n      </FormControl>\r\n      <List component=\"nav\" className={classes.root}>\r\n        {targetFiles.map((file, index) => (\r\n          <React.Fragment\r\n            key={String(file.folderId) + \"-\" + String(file.fileId)}\r\n          >\r\n            <ListItem\r\n              key={file.fileId}\r\n              role={undefined}\r\n              dense\r\n              button\r\n              divider={true}\r\n            >\r\n              <Checkbox\r\n                edge=\"start\"\r\n                checked={file.checked}\r\n                tabIndex={-1}\r\n                disableRipple\r\n                inputProps={{\r\n                  \"aria-labelledby\": `checkbox-list-label-${file.fileId}`,\r\n                }}\r\n                color=\"default\"\r\n                onClick={() => {\r\n                  clickFile(file.folderId, file.fileId, file.checked);\r\n                }}\r\n              />\r\n              <ListItemText\r\n                id={`checkbox-list-name-${file.fileId}`}\r\n                primary={file.name}\r\n                className={classes.title}\r\n              />\r\n              <ListItemText\r\n                id={`checkbox-list-text-${file.fileId}`}\r\n                primary={file.text}\r\n                className={classes.text}\r\n              />\r\n              <div className={classes.iconButtonGroup}>\r\n                <IconButton\r\n                  edge=\"end\"\r\n                  size=\"small\"\r\n                  className={classes.iconButton}\r\n                >\r\n                  {file.listening ? (\r\n                    <Spinner\r\n                      name=\"line-scale\"\r\n                      color=\"gray\"\r\n                      fadeIn=\"none\"\r\n                      className={classes.iconButton}\r\n                    />\r\n                  ) : (\r\n                    \"\"\r\n                  )}\r\n                </IconButton>\r\n                <IconButton\r\n                  edge=\"end\"\r\n                  size=\"small\"\r\n                  className={classes.iconButton}\r\n                  onClick={() => {\r\n                    handlerSpeak(\r\n                      file.folderId,\r\n                      file.fileId,\r\n                      file.name,\r\n                      file.text\r\n                    );\r\n                  }}\r\n                >\r\n                  <MusicNote />\r\n                </IconButton>\r\n                <IconButton\r\n                  edge=\"end\"\r\n                  size=\"small\"\r\n                  className={classes.iconButton}\r\n                  onClick={() => {\r\n                    if (window.confirm(\"削除してもよろしいでしょうか？\")) {\r\n                      fileDel(file.folderId, file.fileId);\r\n                      alert(\"削除しました。\");\r\n                    }\r\n                  }}\r\n                >\r\n                  <DeleteIcon />\r\n                </IconButton>\r\n                {/* <IconButton\r\n                  edge=\"end\"\r\n                  size=\"small\"\r\n                  className={classes.iconButton}\r\n                  onClick={() => {\r\n                    // handlerSpeak(file.text);\r\n                  }}\r\n                >\r\n                  <EditIcon />\r\n                </IconButton> */}\r\n              </div>\r\n            </ListItem>\r\n          </React.Fragment>\r\n        ))}\r\n      </List>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nconst getFolderIcon = (type: string) => {\r\n  switch (type) {\r\n    case \"action\":\r\n      return <Folder color=\"action\" style={{ fontSize: \"20px\" }} />;\r\n    case \"disabled\":\r\n      return <Folder color=\"disabled\" style={{ fontSize: \"20px\" }} />;\r\n    case \"primary\":\r\n      return <Folder color=\"primary\" style={{ fontSize: \"20px\" }} />;\r\n    case \"secondary\":\r\n      return <Folder color=\"secondary\" style={{ fontSize: \"20px\" }} />;\r\n    case \"error\":\r\n      return <Folder color=\"error\" style={{ fontSize: \"20px\" }} />;\r\n    default:\r\n      return <Folder />;\r\n  }\r\n};\r\n\r\nexport default withStyles(styles)(Body);\r\n","import React, { FC } from \"react\";\r\nimport { Fold, File } from \"speak\";\r\nimport {\r\n  withStyles,\r\n  WithStyles,\r\n  StyleRules,\r\n  createMuiTheme,\r\n  MuiThemeProvider,\r\n  ThemeProvider,\r\n} from \"@material-ui/core/styles\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Login from \"../components/Login\";\r\nimport Header from \"../components/Header\";\r\nimport SideBar from \"../components/SideBar\";\r\nimport Body from \"../components/Body\";\r\n// import Footer from \"../components/Footer\";\r\n\r\nconst styles = (): StyleRules => ({\r\n  flex: {\r\n    display: \"flex\",\r\n  },\r\n  login: {\r\n    width: \"100vw\",\r\n    height: \"100vh\",\r\n  },\r\n  sidebar: {\r\n    width: \"40%\",\r\n    height: \"100%\",\r\n    minHeight: \"calc(100vh - 70px)\",\r\n    border: \"0.8px solid gray\",\r\n    margin: \"5px\",\r\n  },\r\n  body: {\r\n    width: \"100%\",\r\n    height: \"100%\",\r\n    minHeight: \"calc(100vh - 70px)\",\r\n    margin: \"4px 4px 4px 0px\",\r\n    border: \"0.8px solid gray\",\r\n  },\r\n  foot: {\r\n    height: \"10px\",\r\n    textAlign: \"right\",\r\n    margin: \"10px\",\r\n  },\r\n});\r\n\r\ntype Props = WithStyles<typeof styles> & {\r\n  folders: Fold[];\r\n  files: File[];\r\n  type: string;\r\n  loginAuth: boolean;\r\n  loginAction: (id: string, pw: string) => void;\r\n  changeType: (type: string) => void;\r\n  changeSearch: (text: string) => void;\r\n  clickFolder: (id: string, opened: boolean) => void;\r\n  clickPlay: (folderId: number, fileId: number, playBefore: boolean) => void;\r\n  clickFile: (folderId: number, fileId: number, checked: boolean) => void;\r\n  clickAll: (checked: boolean) => void;\r\n  folderAdd: (name: string, category: string) => void;\r\n  fileAdd: (folderId: number, name: string, text: string) => void;\r\n  fileDel: (folderId: number, fileId: number) => void;\r\n};\r\n\r\nconst Speak: FC<Props> = ({\r\n  classes,\r\n  folders,\r\n  files,\r\n  type,\r\n  loginAuth,\r\n  loginAction,\r\n  changeType,\r\n  changeSearch,\r\n  clickFolder,\r\n  clickPlay,\r\n  clickFile,\r\n  clickAll,\r\n  folderAdd,\r\n  fileAdd,\r\n  fileDel,\r\n}) => {\r\n  const theme = createMuiTheme({\r\n    palette: {\r\n      type: type === \"dark\" ? \"dark\" : \"light\",\r\n      background: {\r\n        default: \"#000fff\",\r\n      },\r\n    },\r\n    typography: {\r\n      button: {\r\n        textTransform: \"none\",\r\n      },\r\n      fontSize: 11,\r\n      fontFamily: [\r\n        \"Montserrat\",\r\n        \"游ゴシック\",\r\n        \"YuGothic\",\r\n        \"ヒラギノ角ゴ ProN W3\",\r\n        \"Hiragino Kaku Gothic ProN\",\r\n        \"メイリオ\",\r\n        \"Meiryo\",\r\n        \"sans - serif\",\r\n      ].join(\",\"),\r\n    },\r\n    mixins: {\r\n      toolbar: {\r\n        minHeight: 56,\r\n      },\r\n    },\r\n    props: {\r\n      MuiList: {\r\n        dense: true,\r\n      },\r\n    },\r\n  });\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <ThemeProvider theme={theme}>\r\n        <MuiThemeProvider theme={theme}>\r\n          <div\r\n            style={\r\n              type === \"dark\"\r\n                ? { backgroundColor: \"#424242\" }\r\n                : { backgroundColor: \"#fff\" }\r\n            }\r\n          >\r\n            {loginAuth ? (\r\n              <React.Fragment>\r\n                <Header\r\n                  type={type}\r\n                  loginAction={loginAction}\r\n                  changeSearch={changeSearch}\r\n                  changeType={changeType}\r\n                />\r\n                <div className={classes.flex}>\r\n                  <Paper className={classes.sidebar}>\r\n                    <SideBar\r\n                      folders={folders}\r\n                      clickFolder={clickFolder}\r\n                      folderAdd={folderAdd}\r\n                    />\r\n                  </Paper>\r\n                  <Paper className={classes.body}>\r\n                    <Body\r\n                      folders={folders}\r\n                      files={files}\r\n                      clickPlay={clickPlay}\r\n                      clickFile={clickFile}\r\n                      clickAll={clickAll}\r\n                      fileAdd={fileAdd}\r\n                      fileDel={fileDel}\r\n                    />\r\n                  </Paper>\r\n                </div>\r\n                {/* <div className={classes.foot}>\r\n            <Footer />\r\n          </div> */}\r\n              </React.Fragment>\r\n            ) : (\r\n              <Paper className={classes.login}>\r\n                <Login loginAction={loginAction} loginAuth={loginAuth} />\r\n              </Paper>\r\n            )}\r\n          </div>\r\n        </MuiThemeProvider>\r\n      </ThemeProvider>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default withStyles(styles)(Speak);\r\n","import { Dispatch } from \"redux\";\r\nimport { connect } from \"react-redux\";\r\nimport { AppState } from \"../../state/store\";\r\nimport { operations } from \"../../state/speak\";\r\nimport Component from \"../pages/Speak\";\r\n\r\nconst mapStateToProps = (state: AppState) => ({\r\n  folders: [...state.speak.folders],\r\n  files: [...state.speak.files],\r\n  type: state.speak.type,\r\n  loginAuth: state.speak.loginAuth,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch: Dispatch) => {\r\n  return {\r\n    loginAction(id: string, pw: string) {\r\n      dispatch(operations.loginAction(id, pw));\r\n    },\r\n    changeType(changeType: string) {\r\n      dispatch(operations.changeType(changeType));\r\n    },\r\n    changeSearch(text: string) {\r\n      dispatch(operations.changeSearch(text));\r\n    },\r\n    clickFolder(id: string, opened: boolean) {\r\n      dispatch(operations.clickFolder(id, opened));\r\n    },\r\n    clickPlay(folderId: number, fileId: number, playBefore: boolean) {\r\n      dispatch(operations.clickPlay(folderId, fileId, playBefore));\r\n    },\r\n    clickFile(folderId: number, fileId: number, checked: boolean) {\r\n      dispatch(operations.clickFile(folderId, fileId, checked));\r\n    },\r\n    clickAll(checked: boolean) {\r\n      dispatch(operations.clickAll(checked));\r\n    },\r\n    folderAdd(name: string, category: string) {\r\n      dispatch(operations.folderAdd(name, category));\r\n    },\r\n    folderDel() {\r\n      dispatch(operations.folderDel());\r\n    },\r\n    fileAdd(folderId: number, name: string, text: string) {\r\n      dispatch(operations.fileAdd(folderId, name, text));\r\n    },\r\n    fileDel(folderId: number, fileId: number) {\r\n      dispatch(operations.fileDel(folderId, fileId));\r\n    },\r\n    musicStart() {\r\n      dispatch(operations.musicStart());\r\n    },\r\n    musicStop() {\r\n      dispatch(operations.musicStop());\r\n    },\r\n    musicEnd() {\r\n      dispatch(operations.musicEnd());\r\n    },\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Component);\r\n","import React, { FC } from \"react\";\nimport \"./App.css\";\n// import { Fold } from \"speak\";\nimport SpeakContainer from \"./containers/SpeakContainer\";\nimport { withStyles, StyleRules } from \"@material-ui/core/styles\";\n\nconst styles = (): StyleRules => ({});\n\nconst App: FC = () => {\n  return (\n    <React.Fragment>\n      <SpeakContainer />\n    </React.Fragment>\n  );\n};\n\nexport default withStyles(styles)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","// import { Store } from \"redux\";\r\nimport {\r\n  createStore as reduxCreateStore,\r\n  combineReducers,\r\n  compose,\r\n  Reducer,\r\n} from \"redux\";\r\nimport speakReducer, { SpeakState } from \"./speak/reducers\";\r\nimport persistState from \"redux-localstorage\";\r\n\r\nexport type AppState = {\r\n  speak: SpeakState;\r\n};\r\n\r\nconst reducer: Reducer = combineReducers({\r\n  speak: speakReducer,\r\n});\r\n\r\n// export default function createStore() {\r\n//   const a = compose(persistState())(reduxCreateStore)(reducer);\r\n//   console.log(a);\r\n//   return a;\r\n// }\r\n\r\nconst store: any = compose(persistState())(reduxCreateStore)(reducer);\r\n\r\nexport default store;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./views/App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { Provider } from \"react-redux\";\nimport store from \"./state/store\";\n\n// const store = configureStore();\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}